<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>TheSong</title>
    <link>https://thesong96.github.io/</link>
    
    <atom:link href="/rss.xml" rel="self" type="application/rss+xml"/>
    
    <description>TheSong is named after IG.TheShy</description>
    <pubDate>Sat, 07 Nov 2020 22:42:21 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>DAYLY Summary and Plan</title>
      <link>https://thesong96.github.io/2020/11/03/DAYLY-PlAN/</link>
      <guid>https://thesong96.github.io/2020/11/03/DAYLY-PlAN/</guid>
      <pubDate>Tue, 03 Nov 2020 11:19:42 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;nov.03.2020&quot;&gt;Nov.03.2020&lt;/h2&gt;
&lt;h3 id=&quot;change-the-structure-of-code-do-retinanet-and-spanet-detection-in-real-tim&quot;&gt;Change the structu
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="nov.03.2020">Nov.03.2020</h2><h3 id="change-the-structure-of-code-do-retinanet-and-spanet-detection-in-real-tim">Change the structure of code, do RetinaNet and SPANet Detection in Real-Tim</h3><h4 id="notation">Notation</h4><ol type="1"><li>[<code>startImg</code>, <code>actImg</code>] -&gt; <code>pix2food</code> -&gt; <code>fakeImg</code>(or pushed image)</li><li>startImg<code>: orginal image from camera</code></li><li><code>actImg</code>: generated based on food bbox detected from <code>startImg</code>, set some defaults in case no food bbox deteced</li><li>fakeImg: <code>generated from</code> pix2food</li><li><code>Real Pushed Image</code> = next <code>startImg</code>, it's the ground truth for <code>fakeImg</code></li></ol><h4 id="high-level-thoughts">high level thoughts:</h4><ol type="1"><li>generate 4 actImg and 4 fakeImg(pushed images) in real-time<ol type="1"><li>no matter whether there's food or not (empty plate).</li><li>no matter whether the food in the plate is detected or not, when no food, default 4 actImg will be (center of plate -&gt; top, bot, left, right)</li></ol></li><li>use RetinaNet and SPANet to detect and predict bbox and acquisition for 5 images(1 <code>startImg</code> + 4 <code>fakeImg</code>).<ol type="1"><li>what will happen if no food or empty plate in <code>startImg</code>? the <code>fakeImg</code> should be the same as <code>startImg</code>.</li><li>However, some artifacts mpotato will show up in fakeImg, due to badly trained <code>pix2food</code>(enhance dataset to cover this case)</li></ol></li><li>visualize 5 images(1 <code>startImg</code> + 4 <code>fakeImg</code>) with corresponding actImg.</li><li>choose the one with best Aquisition Action to pub to <code>Aikido</code><ol type="1"><li>if it's a <code>fakeImg</code> then send the <code>actImg</code> to <code>Ada</code></li><li>if it's the <code>startImg</code>, then send <code>scoop</code> to <code>Ada</code></li></ol></li><li>based on <code>fakeImg</code>, pre plan trajectory for scooping? what if <code>fakeImg</code> doesn't match well with <code>Real Pushed Image</code>?</li><li>redo RetinaNet, SPANet on <code>Real Pushed Image</code> then repeat steps above.</li></ol><h4 id="details">details:</h4><ol type="1"><li>set a callback for camera image topic</li><li>in the callback, img -&gt; RetinaNet -&gt; bbox -&gt; SPANet -&gt; 4 MarkerArray</li><li>genrate 4 actImg based on bbox(which bbox TBD) with default actImg(from img center to 4 directions)</li><li>Pix2Food -&gt; 4 fakeImg -&gt; RetinaNet -&gt; 4 bboxes -&gt; SPANet -&gt; 4 MarkerArray</li><li>Publish all 4 fakeImg with actImg associated with them</li><li>it's ok when no food show up or no food detected for pix2food for now, deal with it latter</li><li>figure out the logic of which marker to pub</li></ol><h3 id="debugging-ros-network-setup-between-weebo-and-squirrelmy-own-desktop">Debugging ROS Network Setup between <code>weebo</code> and <code>squirrel</code>(my own desktop)</h3><ol type="1"><li>when running only <code>pix2food</code> model on <code>squirrel</code> and everything else on <code>weebo</code>, there will be some bugs as mentioned below</li><li>this only happen after I add visualizaiton of [<code>startImg</code>, <code>actImg</code>, <code>fakeImg</code>]</li><li>ROS Master cannot revceive msg from <code>reconfig_manager</code>, <code>original</code>, <code>pushed</code> topic and <code>/food/marker_array</code> topic</li></ol><h3 id="data-collection-improvement">Data Collection Improvement</h3><ol type="1"><li>Empty case: when no mpotato, whatever action given, the image won't change</li><li>Reasonable random actImg generator(to generate "whatever action" above).</li></ol><h2 id="nov.07.2020">Nov.07.2020</h2><h3 id="system-design">System Design?</h3><h4 id="reconfignetspanetretinanets">ReconfigNet(SPANet(RetinaNets))</h4><ul><li>check with <code>torch.save</code> make sure it works first!</li></ul>]]></content:encoded>
      
      <comments>https://thesong96.github.io/2020/11/03/DAYLY-PlAN/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Common QA in Compiling PRL Workspace</title>
      <link>https://thesong96.github.io/2020/10/30/Common-QA-in-Compiling-PRL-Workspace/</link>
      <guid>https://thesong96.github.io/2020/10/30/Common-QA-in-Compiling-PRL-Workspace/</guid>
      <pubDate>Sat, 31 Oct 2020 05:50:04 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;dart-related-pkg-compiling&quot;&gt;DART related pkg compiling&lt;/h1&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="dart-related-pkg-compiling">DART related pkg compiling</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Errors     &lt;&lt; aikido:cmake &#x2F;home&#x2F;nansong&#x2F;my_ws&#x2F;logs&#x2F;aikido&#x2F;build.cmake.001.log</span><br><span class="line">CMake Error at &#x2F;usr&#x2F;share&#x2F;cmake-3.10&#x2F;Modules&#x2F;FindPackageHandleStandardArgs.cmake:137 (message):</span><br><span class="line">  Could NOT find DART (missing: optimizer-nlopt) (Required is at least</span><br><span class="line">  version &quot;6.6.2&quot;)</span><br></pre></td></tr></table></figure><p>this basically means you need to install the following pkg: <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install libnlopt-dev</span><br></pre></td></tr></table></figure> but you have to make sure you follow the right order to do it: <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1. catkin clean &amp; rm -rf .catkin_tools</span><br><span class="line">2. sudo apt-get install libnlopt-dev (sometimes you have to restart machine before the step)</span><br><span class="line">3. catkin build dartsim </span><br><span class="line">4. catkin build</span><br></pre></td></tr></table></figure> I am not sure whether it's the optimal steps to do. But it works for now. Need to check back later.</p><h2 id="other-commonly-missing-pkg">other commonly missing pkg</h2><ul><li>octmap</li><li>srdfdom</li></ul>]]></content:encoded>
      
      <comments>https://thesong96.github.io/2020/10/30/Common-QA-in-Compiling-PRL-Workspace/#disqus_thread</comments>
    </item>
    
    <item>
      <title>VSCode Tricks</title>
      <link>https://thesong96.github.io/2020/10/30/VSCode-Tricks/</link>
      <guid>https://thesong96.github.io/2020/10/30/VSCode-Tricks/</guid>
      <pubDate>Fri, 30 Oct 2020 07:54:23 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;jump-server&quot;&gt;Jump Server&lt;/h1&gt;
&lt;h2 id=&quot;copy-your-ssh-key-to-jump-server-and-target-server&quot;&gt;copy your ssh key to jump-server and targe
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h1 id="jump-server">Jump Server</h1><h2 id="copy-your-ssh-key-to-jump-server-and-target-server">copy your ssh key to jump-server and target-server</h2><ul><li>This is your key:</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cat ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><ul><li>ssh-copy-id</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-copy-id usrname@server</span><br></pre></td></tr></table></figure><ul><li>Directly copy to <code>server/~.ssh/authorized_keys</code>, if it doesn’t exist in your server, just create it.</li></ul><h2 id="setup-your-jump-server">Setup your jump server</h2><p>Sometimes you may need to connect from your desktop or laptop to a remote machine over your company's Intranet or behind a firewall. In this case, you may be using an intermediate server or <a href="https://en.wikipedia.org/wiki/Jump_server" target="_blank" rel="noopener">jump box</a>. This kind of setup is useful if you are working within a secure system that is configured to only accept SSH connections from a fixed set of hosts.</p><p>To use a jump-box setup with the Remote - SSH extension, you can use the <code>ProxyCommand</code> config option. This configuration will open a background SSH connection to the jump box, and then connect via a private IP address to the target.</p><p>You can set the <code>ProxyCommand</code> config option in the SSH config file like this:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Jump box with public IP address</span></span><br><span class="line"><span class="string">Host</span> <span class="string">jump-box</span></span><br><span class="line">    <span class="string">HostName</span> <span class="number">52.179</span><span class="number">.157</span><span class="number">.97</span></span><br><span class="line">    <span class="string">User</span> <span class="string">sana</span></span><br><span class="line">    <span class="string">IdentityFile</span> <span class="string">~/.ssh/jumpbox</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Target machine with private IP address</span></span><br><span class="line"><span class="string">Host</span> <span class="string">target-box</span></span><br><span class="line">    <span class="string">HostName</span> <span class="string">&lt;IP</span> <span class="string">address</span> <span class="string">of</span> <span class="string">target&gt;</span></span><br><span class="line">    <span class="string">User</span> <span class="string">sana</span></span><br><span class="line">    <span class="string">IdentityFile</span> <span class="string">~/.ssh/target</span></span><br><span class="line">    <span class="string">ProxyCommand</span> <span class="string">ssh</span> <span class="string">-q</span> <span class="string">-W</span> <span class="string">%h:%p</span> <span class="string">jump-box</span></span><br></pre></td></tr></table></figure><p><em>NOTE</em>: sometimes, the IdentityFile doesn’t work, just comment it out.</p><p>In VSCode, press <code>cmd+shift+p</code> and search connect to ssh host.</p>]]></content:encoded>
      
      <comments>https://thesong96.github.io/2020/10/30/VSCode-Tricks/#disqus_thread</comments>
    </item>
    
    <item>
      <title>ECE PMP 545 - Mobile Car</title>
      <link>https://thesong96.github.io/2020/10/11/ECE-PMP-545-Mobile-Car/</link>
      <guid>https://thesong96.github.io/2020/10/11/ECE-PMP-545-Mobile-Car/</guid>
      <pubDate>Mon, 12 Oct 2020 05:15:50 GMT</pubDate>
      <description>
      
        
        
          

        
      
      </description>
      
      
      <content:encoded><![CDATA[]]></content:encoded>
      
      <comments>https://thesong96.github.io/2020/10/11/ECE-PMP-545-Mobile-Car/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Object Detection Algorithms Review</title>
      <link>https://thesong96.github.io/2020/03/30/Region-Proposal/</link>
      <guid>https://thesong96.github.io/2020/03/30/Region-Proposal/</guid>
      <pubDate>Mon, 30 Mar 2020 07:41:28 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;##Camera 成像原理&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Optical Flow&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://thesong96.github.io/2020/02/27/Camera-Matrix/&quot;&gt;Intrisic and E
        
      
      </description>
      
      
      <content:encoded><![CDATA[<p>##Camera 成像原理</p><ul><li><p>Optical Flow</p></li><li><p><a href="https://thesong96.github.io/2020/02/27/Camera-Matrix/">Intrisic and Extrinsic Matrix</a></p></li><li><p>Terminology Review</p></li></ul><h2 id="object-detections">Object Detections</h2><ul><li>paper review + blog + algorithm reproduction</li><li>SPPNet</li><li>Selective Search</li><li>R-CNN</li><li>Fast-RCNN</li><li>Faster-RCNN</li><li>Yolo 1,2,3</li></ul><h2 id="image-segementationsemantic-segmentation">Image Segementation/Semantic Segmentation</h2><ul><li><p>Vanilla FCN</p></li><li><p>U-Net</p></li><li><p>SegNet</p></li><li><p>DenseNet</p></li><li><p>BlitzNet</p></li><li><p>Mask-RCNN</p></li><li><p>Mask RCNN with the Fully Convolutional Network (FCN) branch achieved the highest performance.</p></li></ul><h2 id="metrics">Metrics:</h2><h3 id="accuracy">Accuracy</h3><ul><li>accuracy is a bad metric, especially when dataset is imbalenced.<ul><li>class imbalance, e.g. 广告点击率,很多广告<span class="math inline">\((x_i, y_i) i = 0, 1, 2 … n\)</span>, <span class="math inline">\(x_i\)</span>表示第i个广告, <span class="math inline">\(y_i\)</span>表示第i个广告是否被click. 就会出现有大量的<span class="math inline">\(y = 0\)</span>, 这样就是positive data很少很少. 如果用accuracy这个metric去optimize model, 就会得到一个model <span class="math inline">\(F \rightarrow F(x_i) = 0\)</span>, 我们的accuracy会很高, 但是这个model就没什么用, 并不能起到预测广告是否会被点击的作用</li><li></li></ul></li></ul><h3 id="precision-recall"><strong>Precision &amp; recall</strong></h3><ul><li><p>Precision: how good is your prediction</p><p>那为啥不用 <span class="math inline">\(\frac{TN}{(TN + FN)}\)</span></p></li><li><p>Recall: how good to find out all positive</p></li></ul><figure><img src="https://i.imgur.com/8DMfFLF.jpg" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h3 id="precision---recall-curve">Precision - Recall Curve</h3><h3 id="roc-curve-tpr---fpr">ROC curve: TPR - FPR</h3><h3 id="iou-intersection-over-union"><strong>IoU (Intersection over union)</strong></h3><figure><img src="https://i.imgur.com/0HeprSV.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><h2 id="yolov1">YOLOv1</h2><p><a href="https://arxiv.org/pdf/1506.02640.pdf" target="_blank" rel="noopener">paper</a></p><p>​</p><p>An important property of a region proposal method is to have a very <strong>high recall</strong>. This is just a fancy way of saying that the regions that contain the objects we are looking have to be in our list of region proposals. To accomplish this our list of region proposals may end up having a lot of regions that do not contain any object. In other words, it is ok for the region proposal algorithm to produce a lot of false positives so long as it catches all the true positives. Most of these false positives will be rejected by object recognition algorithm. The time it takes to do the detection goes up when we have more false positives and the accuracy is affected slightly. But having a high recall is still a good idea because the alternative of missing the regions containing the actual objects severely impacts the detection rate.</p><h2 id="what-is-selective-search">What is Selective Search?</h2><p>Selective Search is a region proposal algorithm used in object detection. It is designed to be fast with a very high recall. It is based on computing hierarchical grouping of similar regions based on color, texture, size and shape compatibility.</p><p>Selective Search starts by over-segmenting the image based on intensity of the pixels using a graph-based <a href="http://cs.brown.edu/~pff/segment/" target="_blank" rel="noopener">segmentation method</a> by Felzenszwalb and Huttenlocher. The output of the algorithm is shown below. The image on the right contains segmented regions represented using solid colors.</p><figure><img src="https://i.imgur.com/8cBUHow.png" alt="image-20200330115743624" /><figcaption aria-hidden="true">image-20200330115743624</figcaption></figure><p>Can we use segmented parts in this image as region proposals? The answer is no and there are two reasons why we cannot do that:</p><ol type="1"><li>Most of the actual objects in the original image contain 2 or more segmented parts</li><li>Region proposals for occluded objects such as the plate covered by the cup or the cup filled with coffee cannot be generated using this method</li></ol><p>If we try to address the first problem by further merging the adjacent regions similar to each other we will end up with one segmented region covering two objects.</p><p>Selective search uses oversegments from Felzenszwalb and Huttenlocher’s method as an initial seed. An oversegmented image looks like this.</p><p><a href="https://www.learnopencv.com/wp-content/uploads/2017/09/breakfast_oversegment.jpg" target="_blank" rel="noopener"><img src="https://www.learnopencv.com/wp-content/uploads/2017/09/breakfast_oversegment-300x200.jpg" alt="Oversegmented Image" /></a>Oversegmented Image</p><p>Selective Search algorithm takes these oversegments as initial input and performs the following steps</p><ol type="1"><li>Add all bounding boxes corresponding to segmented parts to the list of regional proposals</li><li>Group adjacent segments based on similarity</li><li>Go to step 1</li></ol><p>At each iteration, larger segments are formed and added to the list of region proposals. Hence we create region proposals from smaller segments to larger segments in a bottom-up approach. This is what we mean by computing “hierarchical” segmentations using Felzenszwalb and Huttenlocher’s oversegments.</p><figure><img src="https://www.learnopencv.com/wp-content/uploads/2017/09/hierarchical-segmentation-1.jpg" alt="Hierarchical Segmentation for region proposal generation at multiple scales" /><figcaption aria-hidden="true">Hierarchical Segmentation for region proposal generation at multiple scales</figcaption></figure><p>This image shows the initial, middle and last step of the hierarchical segmentation process.</p><h1 id="similarity">Similarity</h1><p>Let’s dive deeper into how do we calculate the similarity between two regions.</p><p>Selective Search uses 4 similarity measures based on color, texture, size and shape compatibility.</p><h2 id="color-similarity">Color Similarity</h2><p>A color histogram of 25 bins is calculated for each channel of the image and histograms for all channels are concatenated to obtain a color descriptor resulting into a 25×3 = 75-dimensional color descriptor.</p><p>Color similarity of two regions is based on histogram intersection and can be calculated as:</p><figure><img src="https://www.learnopencv.com/wp-content/ql-cache/quicklatex.com-3a99604c3b9fc1664b0ebd9b16aa190c_l3.png" alt="{color}(r_i, r_j) = {k=1}^n min(c^k_i, c^k_j)" /><figcaption aria-hidden="true"><em>{color}(r_i, r_j) = </em>{k=1}^n min(c^k_i, c^k_j)</figcaption></figure><p><img src="https://www.learnopencv.com/wp-content/ql-cache/quicklatex.com-34d855e06476464bdb18051a043565ab_l3.png" alt="c^k_i" /> is the histogram value for <img src="https://www.learnopencv.com/wp-content/ql-cache/quicklatex.com-19a1201960f1c720275a7fd8ab39ea27_l3.png" alt="k^{th}" /> bin in color descriptor</p><h2 id="texture-similarity">Texture Similarity</h2><p>Texture features are calculated by extracting Gaussian derivatives at 8 orientations for each channel. For each orientation and for each color channel, a 10-bin histogram is computed resulting into a 10x8x3 = 240-dimensional feature descriptor.</p><p>Texture similarity of two regions is also calculated using histogram intersections.</p><figure><img src="https://www.learnopencv.com/wp-content/ql-cache/quicklatex.com-169d419080f56b69f9645cd13ee5b0ac_l3.png" alt="s_{texture}(r_i, r_j) = _{k=1}^n min(t^k_i, t^k_j)" /><figcaption aria-hidden="true">s_{texture}(r_i, r_j) = _{k=1}^n min(t^k_i, t^k_j)</figcaption></figure><p><img src="https://www.learnopencv.com/wp-content/ql-cache/quicklatex.com-a9283008bc26743f78b7ac5644fa42d7_l3.png" alt="t^k_i" /> is the histogram value for <img src="https://www.learnopencv.com/wp-content/ql-cache/quicklatex.com-19a1201960f1c720275a7fd8ab39ea27_l3.png" alt="k^{th}" /> bin in texture descriptor</p><h2 id="size-similarity">Size Similarity</h2><p>Size similarity encourages smaller regions to merge early. It ensures that region proposals at all scales are formed at all parts of the image. If this similarity measure is not taken into consideration a single region will keep gobbling up all the smaller adjacent regions one by one and hence region proposals at multiple scales will be generated at this location only. Size similarity is defined as:</p><figure><img src="https://www.learnopencv.com/wp-content/ql-cache/quicklatex.com-ed6bd32a9661aa84228d1ca1c75f5d29_l3.png" alt="s_{size}(r_i, r_j) = 1 - " /><figcaption aria-hidden="true">s_{size}(r_i, r_j) = 1 - </figcaption></figure><p>where <img src="https://www.learnopencv.com/wp-content/ql-cache/quicklatex.com-301d49b3076ccce5448547f0910f2bc0_l3.png" alt="size(im)" /> is size of image in pixels.</p><h2 id="shape-compatibility">Shape Compatibility</h2><p>Shape compatibility measures how well two regions (<img src="https://www.learnopencv.com/wp-content/ql-cache/quicklatex.com-3fa563d6b892f311bf3e1c27ee15fe97_l3.png" alt="r_i" /> and <img src="https://www.learnopencv.com/wp-content/ql-cache/quicklatex.com-58103e9010f6c91d7c4f4b38b28fe341_l3.png" alt="r_j" />) fit into each other. If <img src="https://www.learnopencv.com/wp-content/ql-cache/quicklatex.com-3fa563d6b892f311bf3e1c27ee15fe97_l3.png" alt="r_i" /> fits into <img src="https://www.learnopencv.com/wp-content/ql-cache/quicklatex.com-58103e9010f6c91d7c4f4b38b28fe341_l3.png" alt="r_j" /> we would like to merge them in order to fill gaps and if they are not even touching each other they should not be merged.</p><p>Shape compatibility is defined as:</p><figure><img src="https://www.learnopencv.com/wp-content/ql-cache/quicklatex.com-9a3fdf638488b3c77915b9b83bf2f3e1_l3.png" alt="s_{fill}(r_i, r_j) = 1 - " /><figcaption aria-hidden="true">s_{fill}(r_i, r_j) = 1 - </figcaption></figure><p>where <img src="https://www.learnopencv.com/wp-content/ql-cache/quicklatex.com-2a6ada491e170016c4a765f114cfd18b_l3.png" alt="size(BB{ij})" /> is a bounding box around <img src="https://www.learnopencv.com/wp-content/ql-cache/quicklatex.com-3fa563d6b892f311bf3e1c27ee15fe97_l3.png" alt="r_i" /> and <img src="https://www.learnopencv.com/wp-content/ql-cache/quicklatex.com-58103e9010f6c91d7c4f4b38b28fe341_l3.png" alt="r_j" />.</p><h2 id="final-similarity">Final Similarity</h2><p>The final similarity between two regions is defined as a linear combination of aforementioned 4 similarities.</p><figure><img src="https://www.learnopencv.com/wp-content/ql-cache/quicklatex.com-67a3c5c3f45a9407ee513056c759f095_l3.png" alt="s(r_i, r_j) = a_1s_{color}(r_i, r_j) + a_2s_{texture}(r_i, r_j) + a_3s_{size}(r_i, r_j)+ a_4s_{fill}(r_i, r_j)" /><figcaption aria-hidden="true">s(r_i, r_j) = a_1s_{color}(r_i, r_j) + a_2s_{texture}(r_i, r_j) + a_3s_{size}(r_i, r_j)+ a_4s_{fill}(r_i, r_j)</figcaption></figure><p>where <img src="https://www.learnopencv.com/wp-content/ql-cache/quicklatex.com-3fa563d6b892f311bf3e1c27ee15fe97_l3.png" alt="r_i" /> and <img src="https://www.learnopencv.com/wp-content/ql-cache/quicklatex.com-58103e9010f6c91d7c4f4b38b28fe341_l3.png" alt="r_j" /> are two regions or segments in the image and <img src="https://www.learnopencv.com/wp-content/ql-cache/quicklatex.com-f58c2a1aace1c9f1cf8597ddef03ab60_l3.png" alt="a_i " /> denotes if the similarity measure is used or not.</p><h1 id="results">Results</h1><p>Selective Search implementation in OpenCV gives thousands of region proposals arranged in decreasing order of objectness. For clarity, we are sharing results with top 200-250 boxes drawn over the image. In general 1000-1200 proposals are good enough to get all the correct region proposals.</p><figure><img src="https://i.imgur.com/Ija12KT.png" alt="image-20200330120116871" /><figcaption aria-hidden="true">image-20200330120116871</figcaption></figure><h2 id="selective-search-python">Selective Search: Python</h2><p>Let’s take a look on how can we use Selective Search based segmentation implemented in OpenCV.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">Usage:</span></span><br><span class="line"><span class="string">    ./ssearch.py input_image (f|q)</span></span><br><span class="line"><span class="string">    f=fast, q=quality</span></span><br><span class="line"><span class="string">Use "l" to display less rects, 'm' to display more rects, "q" to quit.</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># If image path and f/q is not passed as command</span></span><br><span class="line">    <span class="comment"># line arguments, quit and display help message</span></span><br><span class="line">    <span class="keyword">if</span> len(sys.argv) &lt; <span class="number">3</span>:</span><br><span class="line">        print(__doc__)</span><br><span class="line">        sys.exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># speed-up using multithreads</span></span><br><span class="line">    cv2.setUseOptimized(<span class="literal">True</span>);</span><br><span class="line">    cv2.setNumThreads(<span class="number">4</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment"># read image</span></span><br><span class="line">    im = cv2.imread(sys.argv[<span class="number">1</span>])</span><br><span class="line">    <span class="comment"># resize image</span></span><br><span class="line">    newHeight = <span class="number">200</span></span><br><span class="line">    newWidth = int(im.shape[<span class="number">1</span>]*<span class="number">200</span>/im.shape[<span class="number">0</span>])</span><br><span class="line">    im = cv2.resize(im, (newWidth, newHeight))    </span><br><span class="line"></span><br><span class="line">    <span class="comment"># create Selective Search Segmentation Object using default parameters</span></span><br><span class="line">    ss = cv2.ximgproc.segmentation.createSelectiveSearchSegmentation()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># set input image on which we will run segmentation</span></span><br><span class="line">    ss.setBaseImage(im)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Switch to fast but low recall Selective Search method</span></span><br><span class="line">    <span class="keyword">if</span> (sys.argv[<span class="number">2</span>] == <span class="string">'f'</span>):</span><br><span class="line">        ss.switchToSelectiveSearchFast()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Switch to high recall but slow Selective Search method</span></span><br><span class="line">    <span class="keyword">elif</span> (sys.argv[<span class="number">2</span>] == <span class="string">'q'</span>):</span><br><span class="line">        ss.switchToSelectiveSearchQuality()</span><br><span class="line">    <span class="comment"># if argument is neither f nor q print help message</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(__doc__)</span><br><span class="line">        sys.exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># run selective search segmentation on input image</span></span><br><span class="line">    rects = ss.process()</span><br><span class="line">    print(<span class="string">'Total Number of Region Proposals: &#123;&#125;'</span>.format(len(rects)))</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># number of region proposals to show</span></span><br><span class="line">    numShowRects = <span class="number">100</span></span><br><span class="line">    <span class="comment"># increment to increase/decrease total number</span></span><br><span class="line">    <span class="comment"># of reason proposals to be shown</span></span><br><span class="line">    increment = <span class="number">50</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="comment"># create a copy of original image</span></span><br><span class="line">        imOut = im.copy()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># itereate over all the region proposals</span></span><br><span class="line">        <span class="keyword">for</span> i, rect <span class="keyword">in</span> enumerate(rects):</span><br><span class="line">            <span class="comment"># draw rectangle for region proposal till numShowRects</span></span><br><span class="line">            <span class="keyword">if</span> (i &lt; numShowRects):</span><br><span class="line">                x, y, w, h = rect</span><br><span class="line">                cv2.rectangle(imOut, (x, y), (x+w, y+h), (<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>), <span class="number">1</span>, cv2.LINE_AA)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># show output</span></span><br><span class="line">        cv2.imshow(<span class="string">"Output"</span>, imOut)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># record key press</span></span><br><span class="line">        k = cv2.waitKey(<span class="number">0</span>) &amp; <span class="number">0xFF</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># m is pressed</span></span><br><span class="line">        <span class="keyword">if</span> k == <span class="number">109</span>:</span><br><span class="line">            <span class="comment"># increase total number of rectangles to show by increment</span></span><br><span class="line">            numShowRects += increment</span><br><span class="line">        <span class="comment"># l is pressed</span></span><br><span class="line">        <span class="keyword">elif</span> k == <span class="number">108</span> <span class="keyword">and</span> numShowRects &gt; increment:</span><br><span class="line">            <span class="comment"># decrease total number of rectangles to show by increment</span></span><br><span class="line">            numShowRects -= increment</span><br><span class="line">        <span class="comment"># q is pressed</span></span><br><span class="line">        <span class="keyword">elif</span> k == <span class="number">113</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="comment"># close image show window</span></span><br><span class="line">    cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure><hr /><p>🌲<strong>Recap</strong></p><p>Precision = <span class="math inline">\(\frac{tp}{tp + fp}\)</span></p><p>Recal = <span class="math inline">\(\frac{tp}{tp + fn}\)</span></p><p>Imbalanced Acurray = <span class="math inline">\(\frac{tp + tn}{tp + tn + fp + fn}\)</span> = <span class="math inline">\(\frac{\#classified\quad correctly}{\#all}\)</span> (if the dataset is imbalanced, this metric will be misleading cuz it’s gonna be very high, see <a href="https://en.wikipedia.org/wiki/Precision_and_recall" target="_blank" rel="noopener">example</a>)</p><p>Balanced Acurracy = <span class="math inline">\(\frac{TPR + TNR}{2}\)</span></p><p>Eg:</p><p>Consider a sample with 95 negative and 5 positive values.</p><p>Classifying all values as negative in this case.</p><p>Imbalanced Acurray = <span class="math inline">\(\frac{tp + tn}{tp + tn + fp + fn}\)</span> = <span class="math inline">\(\frac{0 + 95}{100}\)</span> = 0.95</p><p>Balanced Acurray = <span class="math inline">\(\frac{TPR + TNR}{2}\)</span> = <span class="math inline">\(\frac{0/5+95/95}{2}\)</span> = 0.5</p><figure><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/2/26/Precisionrecall.svg/350px-Precisionrecall.svg.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><figure><img src="https://i.imgur.com/IlBW3bP.png" alt="img" /><figcaption aria-hidden="true">img</figcaption></figure>]]></content:encoded>
      
      <comments>https://thesong96.github.io/2020/03/30/Region-Proposal/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Hello World</title>
      <link>https://thesong96.github.io/2020/03/30/hello-world/</link>
      <guid>https://thesong96.github.io/2020/03/30/hello-world/</guid>
      <pubDate>Mon, 30 Mar 2020 07:39:35 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
        
      
      </description>
      
      
      <content:encoded><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="quick-start">Quick Start</h2><h3 id="create-a-new-post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br><span class="line">$ hexo server</span><br><span class="line">$ hexo generate</span><br><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="run-server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="generate-static-files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br><span class="line">$ hexo g -d</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="deploy-to-remote-sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content:encoded>
      
      <comments>https://thesong96.github.io/2020/03/30/hello-world/#disqus_thread</comments>
    </item>
    
    <item>
      <title>MuSHR Review</title>
      <link>https://thesong96.github.io/2020/03/21/MuSHR-Review/</link>
      <guid>https://thesong96.github.io/2020/03/21/MuSHR-Review/</guid>
      <pubDate>Sat, 21 Mar 2020 21:56:23 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;Acknowledgement: Xiangyu Xie.&lt;/p&gt;
&lt;p&gt;This review is mainly done by Xiangyu Xie. 我只是做了一点微小的工作.&lt;/p&gt;
&lt;h1 id=&quot;lab0&quot;&gt;Lab0&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;stron
        
      
      </description>
      
      
      <content:encoded><![CDATA[<p>Acknowledgement: Xiangyu Xie.</p><p>This review is mainly done by Xiangyu Xie. 我只是做了一点微小的工作.</p><h1 id="lab0">Lab0</h1><ul><li><strong>Localization</strong>: Determine the pose of a robot relative to a given map of the environment.</li><li><strong>Mapping</strong>: Construct a map.</li><li><strong>Planning</strong>:</li></ul><h2 id="bayes-filterbayesian-update-rule">Bayes filter(bayesian update rule)</h2><p>The <strong>Bayes filter algorithm</strong> includes two steps, the first step is prediction (push belief through dynamics given action), the second step is correction (apply Bayes rule given measurement).</p><p><span class="math display">\[\begin{equation}\begin{aligned}\overline{bel}\left(x_{t}\right) &amp;= \int p\left(x_{t} \mid u_{t}, x_{t-1}\right) bel\left(x_{t-1}\right) d x_{t-1} \\bel\left(x_{t}\right) &amp;= \eta p\left(z_{t} \mid x_{t}\right) \overline{bel}\left(x_{t}\right)\end{aligned}\end{equation}\]</span></p><h2 id="kalman-filter">Kalman filter</h2><p><strong>Assumptions</strong>:</p><ol type="1"><li>Linear dynamics <span class="math inline">\(p(x_t | u_t, x_{t-1}) = A_{t} x_{t-1}+B_{t} u_{t}+\varepsilon_{t}\)</span>, where <span class="math inline">\(\varepsilon_t \sim \mathcal{N}(0, R_t)\)</span></li><li>Linear measurement model <span class="math inline">\(p(z_t | x_t) = C_{t} x_{t}+\delta_{t}\)</span>, where <span class="math inline">\(\delta_t \sim \mathcal{N}(0, Q_t)\)</span></li><li>Initial belief <span class="math inline">\(bel(x_0)\)</span> is a gaussian distribution <span class="math display">\[  bel\left(x_{0}\right)=p\left(x_{0}\right)=\operatorname{det}\left(2 \pi \Sigma_{0}\right)^{-\frac{1}{2}} \exp \left\{-\frac{1}{2}\left(x_{0}-\mu_{0}\right)^{T} \Sigma_{0}^{-1}\left(x_{0}-\mu_{0}\right)\right\}  \]</span></li></ol><p><strong>Algorithm</strong>: <span class="math display">\[\mathbf{\text{Algorithm Kalman_filter(}}\mu_{t-1}, \Sigma_{t-1}, u_t, z_t \mathbf{):} \\\begin{align*}\bar{\mu}_{t} &amp;=A_{t} \mu_{t-1}+B_{t} u_{t} \\ \bar{\Sigma}_{t} &amp;=A_{t} \Sigma_{t-1} A_{t}^{T}+R_{t} \\ K_{t} &amp;=\bar{\Sigma}_{t} C_{t-1}^{T}\left(C_{t} \bar{\Sigma}_{t} C_{t}^{T}+Q_{t}\right)^{-1} \\ \mu_{t} &amp;=\bar{\mu}_{t}+K_{t}\left(z_{t}-C_{t} \bar{\mu}_{t}\right) \\\Sigma_{t} &amp;=\left(I-K_{t} C_{t}\right) \bar{\Sigma}_{t} \\ &amp;\text{return } \mu_{t}, \Sigma_{t}\end{align*}\]</span></p><p>TODO(Nansong): - derive the bayes update rule for Kalman filter and EKF(which represent the present the state (also obeservation?) as probability distribution, i.e gussian distribution, arbitrary distribution) - derive the bayes update rule by hand for particle filter(which represent the state as particles) - analyze the pros and cons, i.e computational and storage expenses, which one is faster. or differences between Kalman Filter and Particle Filter, and specify cases where which algorithms fits better.</p><h1 id="lab1">Lab1</h1><h2 id="motion-model">Motion model</h2><ul><li><strong>Kinematic model</strong>: map wheel speeds to robot velocities.</li><li><strong>Dynamic model</strong>: map wheel torques to robot accelerations.</li></ul><p>Consider only kinematic model <span class="math inline">\(p(x_t | u_t, x_{t-1})\)</span> for now (assume we can set the speed directly), then <span class="math inline">\(x = [x, y, \theta]^T\)</span>, <span class="math inline">\(u = [V, \delta]^T\)</span>, where <span class="math inline">\(\theta\)</span> is the heading and <span class="math inline">\(\delta\)</span> is the steering angle.</p><p>Now we will derive the motion model for rear axel. Note that a rigid body undergoing rotation and translation can be viewed as pure rotation about a instant center of rotation:</p><p>Notes: <mark>How to find CoR? find two points(in our case, front wheels and rear wheels) in a rigid body and find their velocity vectors, the crosspoint of perpendicular lines of two velocity vectors is the CoR.</mark> <img src="https://codimd.s3.shivering-isles.com/demo/uploads/upload_cdea034260cfff09d98139707f3140b0.png" /></p><p><mark>TODO: come up with or find other motion model examples apart from race car.</mark></p><p><span class="math display">\[\begin{align*}&amp;\dot{x}=V \cos (\theta)\\&amp;\dot{y}=V \sin (\theta)\\&amp;\dot{\theta}=\omega=\frac{V \tan \delta}{L}\end{align*}\]</span></p><p>With numerical integration we can get <span class="math display">\[\begin{align*}x_{t+1}&amp;=x_{t}+\frac{L}{\tan (\delta)}\left(\sin \left(\theta_{t+1}\right)-\sin \left(\theta_{t}\right)\right) \\y_{t+1}&amp;=y_{t}+\frac{L}{\tan (\delta)}\left(-\cos \left(\theta_{t+1}\right)+\cos \left(\theta_{t}\right)\right) \\\theta_{t+1}&amp;=\theta_{t}+\frac{v}{L} \tan (\delta) \Delta t \quad\end{align*}\]</span></p><h3 id="noise">noise</h3><ol type="1"><li>Control signal error: <span class="math inline">\(\hat{V} \sim \mathcal{N}(V, \sigma_v^2)\)</span>, <span class="math inline">\(\hat{\delta} \sim \mathcal{N}(\delta, \sigma_\delta^2)\)</span></li><li>Incorrect physics (the Kinematic Model is inaccurate): <span class="math inline">\(\hat{x} \sim \mathcal{N}\left(x, \sigma_{x}^{2}\right)\)</span>, <span class="math inline">\(\hat{y} \sim \mathcal{N}\left(y, \sigma_{y}^{2}\right)\)</span>, <span class="math inline">\(\hat{\theta} \sim \mathcal{N}\left(\theta, \sigma_{\theta}^{2}\right)\)</span></li></ol><h2 id="sensor-model">Sensor model</h2><p><span class="math inline">\(p(z_t | x_t, m)\)</span> is the probability of sensor reading <span class="math inline">\(z_t\)</span> given state <span class="math inline">\(x_t\)</span> and map <span class="math inline">\(m\)</span>. Calculate simulated sensor reading <span class="math inline">\(z^*\)</span> form <span class="math inline">\(x\)</span> and <span class="math inline">\(m\)</span> and then compare with <span class="math inline">\(z\)</span>.</p><p>Assume individual beams are conditionally independent given map <mark>(may result in overconfidence problem)</mark>: <span class="math display">\[p\left(z_{t} | x_{t}, m\right)=\prod_{i=1}^{K} p\left(z_{t}^{k} | x_{t}, m\right)\]</span></p><h3 id="noise-1">noise</h3><ol type="1"><li><p>Simple measurement noise in distance value <span class="math display">\[ p_{\text {hit }}\left(z_{t}^{k} | x_{t}, m\right)=\begin{cases} \eta \mathcal{N}\left(z_{t}^{k} ; z_{t}^{k *}, \sigma_{\text {hit }}^{2}\right) &amp; \text { if } 0 \leq z_{t}^{k} \leq z_{\max } \\ 0 &amp; \text { otherwise } \end{cases} \]</span></p></li><li><p>Presence of unexpected objects <span class="math display">\[ p_{\text {short }}\left(z_{t}^{k} | x_{t}, m\right)=\begin{cases} \eta \lambda_{\text {short }} e^{-\lambda_{\text {short }} z_{t}^{k}} &amp; \text { if } 0 \leq z_{t}^{k} \leq z_{t}^{k *} \\ 0 &amp; \text { otherwise } \end{cases} \]</span></p></li><li><p>Laser returns max range when no objects <span class="math display">\[ p_{\max }\left(z_{t}^{k} | x_{t}, m\right)=I\left(z=z_{\max }\right)=\begin{cases} 1 &amp; \text { if } z=z_{\max } \\ 0 &amp; \text { otherwise } \end{cases} \]</span></p></li><li><p>Failures in sensing <span class="math display">\[ p_{\text {rand }}\left(z_{t}^{k} | x_{t}, m\right)=\begin{cases} \frac{1}{z_{\max }} &amp; \text { if } 0 \leq z_{t}^{k}&lt;z_{\max } \\ 0 &amp; \text { otherwise } \end{cases} \]</span></p></li></ol><p>Combine these 4 model to get <span class="math display">\[p\left(z_{t}^{k} | x_{t}, m\right)=\begin{pmatrix}z_{\mathrm{hit}} \\z_{\text {short }} \\z_{\text {max }} \\z_{\text {rand }}\end{pmatrix}^{T} \begin{pmatrix}p_{\text {hit }}(z_{t}^{k} | x_{t}, m) \\p_{\text {short }}(z_{t}^{k} | x_{t}, m) \\p_{\text {max }}(z_{t}^{k} | x_{t}, m) \\p_{\text {rand }}(z_{t}^{k} | x_{t}, m)\end{pmatrix}\]</span></p><h2 id="particle-filter">Particle filter</h2><p>The particle filter is an alternative <strong>nonparametric</strong> implementation of the Bayes filter. The key idea is to represent the posterior <span class="math inline">\(bel(x_t)\)</span> by a set of random state samples (particles) drawn from this posterior. <span class="math display">\[\mathbf{\text{Algorithm Particle_filter(}} \mathcal{X}_{t-1}, u_t, z_t \mathbf{):} \\\begin{align*}&amp;\bar{\mathcal{X}}_{t}=\mathcal{X}_{t}=\emptyset \\&amp;\text{for } m=1 \text{ to } M \text{ do} \\&amp;\qquad \text{sample } x_{t}^{[m]} \sim p\left(x_{t} \mid u_{t}, x_{t-1}^{[m]}\right) \\ &amp;\qquad {w_{t}^{[m]}=p\left(z_{t} \mid x_{t}^{[m]}\right)} \\&amp;\qquad {\bar{\mathcal{X}}_{t}=\bar{\mathcal{X}}_{t}+\left\langle x_{t}^{[m]}, w_{t}^{[m]}\right\rangle} \\&amp;\text{endfor } \\&amp;\text{for } m = 1 \text{ to } M \text{ do} \\&amp;\qquad \text{draw } i \text{ with probability } \propto w_{t}^{[i]} \\&amp;\qquad \text{add } x_t^{[i]} \text{ to } \mathcal{X}_t \\&amp;\text{endfor} \\&amp;\text{return } \mathcal{X}_t\end{align*}\]</span></p><p>We first sample <span class="math inline">\(x_t\)</span> from the state transition distribution, then calculate the <strong>importance factor</strong>, <span class="math inline">\(w_t\)</span>. In the next loop, we do the <strong>resampling</strong>/<strong>importance sampling</strong>, to change the distribution of particles from <span class="math inline">\(\overline{bel}(x_t)\)</span> to <span class="math inline">\(bel(x_t)\)</span>.</p><h3 id="resample">resample</h3><p>Resampling can cause high-variance (low-entropy) problem, where particles are depleted. Possible fixes:</p><ol type="1"><li>If the variance of weights low, don't resample.</li><li>Use low-variance sampling.</li></ol><p>TODO(Nansong) - explain normal importance sampling? - differece between importance sampling and low-varience sampling? or is low-varience sampling is one method of importance sampling ?</p><p><span class="math display">\[\mathbf{\text{Algorithm Low_variance_sampler(}} \mathcal{X}_{t}, \mathcal{W}_{t} \mathbf{):} \\\begin{align*}&amp;\bar{X}_{t}=\emptyset \\&amp;r=\operatorname{rand}\left(0 ; M^{-1}\right) \\&amp;c=w_{t}^{[1]} \\&amp;i=1 \\&amp;\text{for } m=1 \text{ to } M \text{ do} \\&amp;\qquad U=r+(m-1) \cdot M^{-1} \\ &amp;\qquad \text{while } U &gt; c \\&amp;\qquad\quad i=i+1 \\&amp;\qquad\quad c=c+w_{t}^{[i]} \\&amp;\qquad \text{endwhile} \\&amp;\qquad \text{add } x_{t}^{[i]} \text{ to } \bar{X}_{t} \\&amp;\text{endfor } \\&amp;\text{return } \bar{\mathcal{X}}_t\end{align*}\]</span></p><p><img src="https://codimd.s3.shivering-isles.com/demo/uploads/upload_4843cc831aa0cfd6384fbe8c8d4a1135.png" /></p><p>TODO(Nansong): - give a python implementation of this low varience resample algorithm - give a python implementation of importance sampling of arbitrary probability distribution</p><h3 id="expected-pose">expected pose</h3><p>Calculate expected pose from particles: <span class="math inline">\(x\)</span> and <span class="math inline">\(y\)</span> can be computed directly by the weighted average. However, the weighted average of <span class="math inline">\(\theta\)</span> is not accurate. Thus we use cosine and sine averaging. (<a href="https://en.wikipedia.org/wiki/Mean_of_circular_quantities" target="_blank" rel="noopener">Ref</a>)</p><h2 id="code">Code</h2><p><code>MotionModel.py</code>:</p><ol type="1"><li>Subscribe to motor topic, get control info (speed and steering angle), also save last frame info for calculation.</li><li>Add variance to speed and steering angle. Apply motion model on particles. Add variance to states.</li></ol><p><code>SensorModle.py</code>:</p><ol type="1"><li>Precompute the sensor model table and use <a href="https://github.com/kctess5/range_libc" target="_blank" rel="noopener">range_libc</a> package to achieve 2D raycasting for 2D occupancy grid.</li><li>Subscribe to scan topic, filter out invalid and extreme scan values, downsample, and pass processed data to update weights.</li></ol><p><code>ParticleFilter.py</code>:</p><ol type="1"><li>Transfer map to occupancy grid.</li><li>Globally initialize particles and weights. Initialize motion model and sensor model.</li><li>Subscribe to <code>/intialpose</code> topic, initialize particles and weights around initial pos.</li><li>When receiving scan infos, update weights, resample and calculate the expected pose for visualization.</li></ol><h1 id="lab2">Lab2</h1><table><thead><tr class="header"><th style="text-align: center;"></th><th style="text-align: center;">Uses Model</th><th style="text-align: center;">Stability Guarantee</th><th style="text-align: center;">Minimize Cost</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;">PID</td><td style="text-align: center;">No</td><td style="text-align: center;">No</td><td style="text-align: center;">No</td></tr><tr class="even"><td style="text-align: center;">Pure Pursuit</td><td style="text-align: center;">Circular arcs</td><td style="text-align: center;">Yes - with assumptions</td><td style="text-align: center;">No</td></tr><tr class="odd"><td style="text-align: center;">Lyapunov</td><td style="text-align: center;">Non-linear</td><td style="text-align: center;">Yes</td><td style="text-align: center;">No</td></tr><tr class="even"><td style="text-align: center;">LQR</td><td style="text-align: center;">Linear</td><td style="text-align: center;">Yes</td><td style="text-align: center;">Quadratic</td></tr><tr class="odd"><td style="text-align: center;">iLQR</td><td style="text-align: center;">Non-linear</td><td style="text-align: center;">Yes</td><td style="text-align: center;">Yes</td></tr></tbody></table><h2 id="control">Control</h2><p><img src="https://codimd.s3.shivering-isles.com/demo/uploads/upload_026ce76324175dab1af828975d49d3bf.png" /></p><p>Position error in frame A: <span class="math display">\[{}^{A}e = \begin{bmatrix}x \\ y\end{bmatrix} - \begin{bmatrix}x_{ref} \\ y_{ref}\end{bmatrix}\]</span></p><p>We want position error in frame B so that <span class="math inline">\(x\)</span> and <span class="math inline">\(y\)</span> error correspond to along-track and cross-track error respectively: <span class="math display">\[\begin{align*}{}^{B}e &amp;= {}_A^{B} R {}^{A}e \\&amp;=R(-\theta_{ref}) \left( \begin{bmatrix}x \\ y\end{bmatrix} - \begin{bmatrix}x_{ref} \\ y_{ref}\end{bmatrix} \right) \\&amp;= \begin{bmatrix}\cos \left(\theta_{r e f}\right)\left(x-x_{r e f}\right)+\sin \left(\theta_{r e f}\right)\left(y-y_{r e f}\right) \\-\sin \left(\theta_{r e f}\right)\left(x-x_{r e f}\right)+\cos \left(\theta_{r e f}\right)\left(y-y_{r e f}\right)\end{bmatrix} \\&amp;= \begin{bmatrix}e_{at} &amp; e_{ct}\end{bmatrix}^T\end{align*}\]</span></p><p>Only consider cross-track error <span class="math inline">\(e_{ct}\)</span> and control steering angle for now.</p><h2 id="pid">PID</h2><p><span class="math display">\[u=-\left(K_{p} e_{c t}+K_{i} \int e_{c t}(t) d t+K_{d} \dot{e}_{c t}\right)\]</span></p><p>where</p><ul><li><span class="math inline">\(K_p\)</span>: Proportional coefficient</li><li><span class="math inline">\(K_i\)</span>: Integral coefficient</li><li><span class="math inline">\(K_d\)</span>: Derivative coefficient</li></ul><p>Analytically compute the derivative term: <span class="math display">\[\begin{align*}\dot{e}_{c t} &amp;=-\sin \left(\theta_{ref}\right) \dot{x}+\cos \left(\theta_{ref}\right) \dot{y} \\&amp;=-\sin \left(\theta_{ref}\right) V \cos (\theta)+\cos \left(\theta_{ref}\right) V \sin (\theta) \\&amp;=V \sin \left(\theta-\theta_{ref}\right) \\&amp;=V \sin \left(\theta_{e}\right)\end{align*}\]</span></p><aside class="notice"><ul><li>what if numerically compute the derivative term?</li><li>find example where Integral term is used. 通常用在有外力的情况? 比如要track的path是N极, 小车是S极(且<span class="math inline">\(K_p\)</span>项和外力抵消, 则无法消除<span class="math inline">\(e_{ct}\)</span>)</li><li>如果我们这个情况用<span class="math inline">\(K_I\)</span>会发生什么?一开始会收敛很快?通常会给积分项<span class="math inline">\(K_I\)</span>一个上限如果离reference path很远 是不是会在远处转圈圈?</li></ul></aside><h2 id="pure-pursuit">Pure-pursuit</h2><p><strong>Key idea</strong>: The car is always moving in a circular arc.</p><ol type="1"><li>Find a lookahead and compute arc</li><li>Move along the arc</li><li>Go to step 1</li></ol><p>Solve for arc: <span class="math display">\[\alpha=\tan ^{-1}\left(\frac{y_{ref}-y}{x_{ref}-x}\right)-\theta \\R = \frac{L}{2 \sin\alpha} \\\dot{\theta} = \frac{V}{R} = \frac{2V\sin\alpha}{L} \\\dot{\theta} = \frac{V\tan u}{B}\]</span></p><p>where <span class="math inline">\(B\)</span> is the car length. Solve for <span class="math inline">\(u\)</span> we can get <span class="math display">\[u = \tan^{-1}\left( \frac{2B \sin \alpha}{L} \right)\]</span></p><p><img src="https://codimd.s3.shivering-isles.com/demo/uploads/upload_9844cc32418a123e41c17e93270542ad.png" /></p><h2 id="lyapunov-control">Lyapunov control</h2><p>Define Lyapunov function: <span class="math display">\[V\left(e_{ct}, \theta_{e}\right)=\frac{1}{2} k_{1} e_{ct}^{2}+\frac{1}{2} \theta_{e}^{2}\]</span></p><p>Compute the derivative: <span class="math display">\[\begin{align*}\dot{V}\left(e_{c t}, \theta_{e}\right)&amp;=k_{1} e_{c t} \dot{e}_{c t}+\theta_{e} \dot{\theta}_{e}\\&amp;=k_{1} e_{c t} V \sin \theta_{e}+\theta_{e} \frac{V}{B} \tan u\end{align*}\]</span></p><p>Set <span class="math inline">\(u\)</span> to get <span class="math inline">\(\dot{V} &lt; 0\)</span>: $$ <span class="math display">\[\begin{align}\theta_{e} \frac{V}{B} \tan u&amp;=-k_{1} e_{c t} V \sin \theta_{e}-k_{2} \theta_{e}^{2} \\\tan u&amp;=-\frac{k_{1} e_{c t} B}{\theta_{e}} \sin \theta_{e}-\frac{B}{V} k_{2} \theta_{e} \\u&amp;=\tan ^{-1}\left(-\frac{k_{1} e_{c t} B}{\theta_{e}} \sin \theta_{e}-\frac{B}{V} k_{2} \theta_{e}\right)\end{align}\]</span> $$</p><h2 id="lqr">LQR</h2><p>Turn the problem into an optimization to trade-off both driving error and keeping control action small: <span class="math display">\[\min _{u(t)} \int_{0}^{\infty}\left(w_{1} e(t)^{2}+w_{2} u(t)^{2} \right) dt\]</span></p><p>Given</p><ol type="1"><li><strong>Linear</strong> dynamic system <span class="math display">\[  x_{t+1} = Ax_t + Bu_t  \]</span></li><li><strong>Quadratic</strong> cost <span class="math display">\[J=\sum_{t=0}^{T-1} x_{t}^{T} Q x_{t}+u_{t}^{T} R u_{t}  \]</span></li></ol><p>The optimal control sequence minimizing the cost is $$ <span class="math display">\[\begin{align}u_t &amp;= K_t x_t \\K_{t}&amp;=-\left(R+B^{T} V_{t+1} B\right)^{-1} B^{T} V_{t+1} A \\V_{t}&amp;=Q+K_{t}^{T} R K_{t}+\left(A+B K_{t}\right)^{T} V_{t+1}\left(A+B K_{t}\right)\end{align}\]</span> $$</p><h2 id="mpc">MPC</h2><ol type="1"><li>Plan a sequence of control actions</li><li>Predict the set of next states to a horizon H</li><li>Evaluate the cost/constraint of the states and controls</li><li>Optimize the cost</li></ol><aside class="notice"><ul><li>主要就是error_cost + collision cost</li><li>如果error_cost 不用(x, y) Euclidian Distance, 而用CrossTrack Error会发生什么？会倒着走么？PID和PurePursuit呢?Lypunov呢?</li><li>能不能把reference path里面每个waypoints的顺序用起来解决这个问题呢. 比如删掉之前用过的reference pose?</li></ul></aside><h2 id="code-1">Code</h2><p><code>controlnode.py</code>: main script</p><ol type="1"><li>Define Subscribers to pose and path infos; Publishers for visualization and Services for reset</li><li>Enter main program when initial pose is set and controller is ready. Get pose and reference pose, get next control and publish to <code>/vesc/high_level/ackermann_cmd_mux/input/nav_0</code> topic.</li><li>Stop when path is completed</li></ol><p><code>runner_script.py</code>:</p><ol type="1"><li>Loading different paths and speed</li><li>Start the controller</li></ol><p><code>controller.py</code>: base controller class</p><ol type="1"><li>Store path info</li><li>Define utility functions: get reference pose by index, get pose and pose_ref error</li></ol><p><mark>Find reference pose function is the same for all controllers: Find the nearest point on the path and lookahead some distance.</mark></p><p><code>pid.py</code>:</p><ol type="1"><li>Use PD equation to get next control (steering angle)</li></ol><p><code>purepursuit.py</code>:</p><ol type="1"><li>Use Purepursuit equation to get next control</li></ol><p><code>mpc.py</code>:</p><ol type="1"><li>Dividing steering angle <span class="math inline">\([-\pi, \pi]\)</span> equally to <span class="math inline">\(K\)</span> rollouts</li><li>Execute each steering angel through <span class="math inline">\(T\)</span> timesteps to collect <span class="math inline">\(K * T\)</span> poses</li><li>Evaluate the cost of each rollout by collision cost and error cost<ol type="1"><li>Collision cost: if any pose in a trajectory is in collision with the map, add a large cost</li><li>Error cost: norm of the distance between last pose and the reference pose, weighted by a constant</li></ol></li><li>Choose the rollout with the minimal cost and execute the first step</li><li>Return to step 1</li></ol><p><code>mpc2.py</code>: Similar to mpc but use scan info rather than map. The only thing change is the obstacles cost.</p><ol type="1"><li>Calculate <span class="math inline">\(N\)</span> obstacles pose in the map by scan info</li><li>For <span class="math inline">\(K * T\)</span> poses, calculate the distance with every obstacles to get <span class="math inline">\(K * T * N\)</span> array</li><li>Find the minimal distance for every pose to get <span class="math inline">\(K * T\)</span> array</li><li>Average through timesteps to get <span class="math inline">\(K\)</span> array, then weighted by a constant to get the obstacles cost.</li></ol><p><code>nonlinear.py</code>:</p><ol type="1"><li>Use Lyapunov control equation to get the control</li></ol><h1 id="lab3">Lab3</h1><p>Steps for planing the path from one point to another:</p><ol type="1"><li>Random sample points on the map and construct the graph</li><li>Use planning algorithm (A*) to search the graph for optimal path</li></ol><h2 id="graph-construction">Graph construction</h2><p>The graph we are constructing is called <a href="https://en.wikipedia.org/wiki/Random_geometric_graph" target="_blank" rel="noopener">Random geometric graph</a> (RGG)</p><ol type="1"><li>Sample a set of collision free vertices <span class="math inline">\(V\)</span></li><li>Connect neighboring vertices to get edges <span class="math inline">\(E\)</span></li></ol><h3 id="sampling">sampling</h3><p>Uniform random sampling tends to clump. We want points to be spread out evenly, which can be achieved by <a href="https://observablehq.com/@jrus/halton" target="_blank" rel="noopener">Halton sequence</a></p><h3 id="optimal-radius">optimal radius</h3><p>We want to choose the radius smaller enough for efficiency while ensuring connectivity. The optimal value can be chosen as <span class="math display">\[r = \left(\frac{\ln|V|}{\alpha_{p,d} |V|}\right)^{1/n}\]</span> where <span class="math inline">\(\alpha_{p,d}\)</span> is a constant. For special case of a two-dimensional space and the euclidean norm (<span class="math inline">\(d=2\)</span>, <span class="math inline">\(p=2\)</span>), <span class="math inline">\(\alpha_{p,d} = \pi\)</span></p><h3 id="dubins-path">Dubins path</h3><p>Since we are considering 2-D car dynamics, we need to connect two points with feasible path instead of straight lines. Mathematically, we need to solve the BVP: <span class="math display">\[\dot{q}(t) = f(q(t), u(t)) \\q(0) = q_1,\quad q(t) = q_2\]</span> where <span class="math inline">\(q=(x,y,\theta)\)</span> in our case.</p><p>Dubins path shows that the solution always exists and has to be one of 6 classes: <span class="math display">\[\{LRL, RLR, LSL, LSR, RSL, RSR\}\]</span> where <span class="math inline">\(L,R,S\)</span> represent turn left, right, straight, respectively.</p><h2 id="planning-algorithm">Planning algorithm</h2><p>Given start node <span class="math inline">\(s_0\)</span>, goal <span class="math inline">\(s_1\)</span> and cost <span class="math inline">\(c(s, s&#39;)\)</span>, create objects:</p><ol type="1"><li>OPEN: <strong>priority queue</strong> of nodes to be processed</li><li>CLOSED: list of nodes already processed</li><li><span class="math inline">\(g(s)\)</span>: estimate of the least cost from start to a given node</li></ol><p>The pseudocode for <strong>best first search</strong> can be expressed as</p><ol type="1"><li><p>Push <span class="math inline">\(s_0\)</span> into OPEN</p></li><li><p>While <span class="math inline">\(s_1\)</span> not expanded</p><ol start="3" type="1"><li><p>Pop <em>best</em> from OPEN</p></li><li><p>Add <em>best</em> to CLOSED</p></li><li><p>For every successor <em>s'</em></p><ol start="6" type="1"><li>If <span class="math inline">\(g(s&#39;) &gt; g(s) + c(s, s&#39;)\)</span><ol start="7" type="1"><li><span class="math inline">\(g(s&#39;) = g(s) + c(s, s&#39;)\)</span></li><li>Add (update) <span class="math inline">\(s&#39;\)</span> to OPEN</li></ol></li></ol></li></ol></li></ol><p>The main problem is how to choose the heuristic function <span class="math inline">\(f(s)\)</span> for step 3.</p><h3 id="djikstras-algorithm">Djikstra's algorithm</h3><p>Choose <span class="math inline">\(f(s) = g(s)\)</span>. Always pop the node with the smallest cost from the origin first.</p><h3 id="a">A*</h3><p><mark>看看这个<a href="http://theory.stanford.edu/~amitp/GameProgramming/AStarComparison.html" target="_blank" rel="noopener">astar</a></mark></p><p>If we can pre-evaluate the cost from the node to the goal <span class="math inline">\(h(s)\)</span>, then we can choose a better <span class="math inline">\(f(s) = g(s) + h(s)\)</span>.</p><ul><li>If <span class="math inline">\(h(s)\)</span> is admissible <span class="math inline">\(h(s) \le h^*(s)\)</span>, <span class="math inline">\(h(goal) = 0\)</span>, then the path return by A* is optimal.</li><li>If <span class="math inline">\(h(s)\)</span> is consistent <span class="math inline">\(h(s) \le c(s, s&#39;) + h(s&#39;)\)</span>, <span class="math inline">\(h(goal) = 0\)</span>, then A* is optimal and efficient (will not re-expand a node).</li></ul><p>All consistent heuristics are admissible, not vice versa.</p><h3 id="weighted-a">weighted A*</h3><p>Choose <span class="math inline">\(f(s) = g(s) + \epsilon h(s)\)</span>, where <span class="math inline">\(\epsilon &gt; 1\)</span>. It is more efficient and the solution is <span class="math inline">\(\epsilon\)</span>-optimal <span class="math inline">\(c \le \epsilon c^*\)</span></p><h3 id="lazy-a">lazy A*</h3><p>Instead of checking edge collision for all neighbors, only check the edge to parent when expanding. <mark>OPEN list will have multiple copies of a node since we haven't collision check.</mark></p><h3 id="shortcut">shortcut</h3><p>After a path is found, we can randomly pick two nodes and connect them directly if the edge is collision-free.</p><h2 id="code-2">Code</h2><p><code>run.py</code>: main program</p><ol type="1"><li>Load map info</li><li>Construct graph given environment, sampler, number of vertices, connection radius.</li><li>Add start and end node</li><li>Use A* or lazy A* algorithm to search the optimal path and visualize</li></ol><p><code>MapEnvironment.py</code>: define utility functions associated with planning</p><ol type="1"><li>Check edge collision</li><li>Compute heuristic and distance function</li><li>Generate path on the map</li><li>Visualization of the graph and path</li></ol><p><code>Sampler.py</code>: create random samples for graph construction</p><ol type="1"><li>Use <a href="https://gist.github.com/tupui/cea0a91cc127ea3890ac0f002f887bae" target="_blank" rel="noopener">halton sequence</a> to generate 2-D random vertices in <span class="math inline">\((0,1)\)</span></li><li>Scale by map info</li></ol><p><code>graph_maker.py</code>: construct graph</p><ol type="1"><li>Use python package <a href="https://networkx.github.io/" target="_blank" rel="noopener">NetworkX</a> to easily construct a graph</li><li>Add sampled valid vertices</li><li>Connect edges within radius and without collision (do not check collision if using lazy A*)</li></ol><p><code>astar.py</code>: A* algorithm</p><ol type="1"><li>Use <code>heapq</code> package to create priority queue to store <code>[f(s), count, node, g(s), parent]</code> info. <code>count</code> is used to prevent comparing node when <span class="math inline">\(f(s)\)</span> are the same.</li><li>Use dict <code>enqueued</code> to store <span class="math inline">\(g(s)\)</span> and <span class="math inline">\(h(s)\)</span> for a node, and another dict <code>explored</code> to store the explored node and its parent node.</li><li>Add start node to the queue.</li><li>While queue is not empty, pop one node and add it to <code>explored</code> if it is not already there.</li><li>For all the neighbor node <span class="math inline">\(s&#39;\)</span>, compute <span class="math inline">\(g(s&#39;) = g(s) + c(s,s&#39;)\)</span> if <span class="math inline">\(s&#39;\)</span> is not already in <code>explored</code>.</li><li>If <span class="math inline">\(s&#39;\)</span> is in <code>enqueued</code>, get its previous <span class="math inline">\(g&#39;(s&#39;)\)</span> and <span class="math inline">\(h&#39;(s&#39;)\)</span>. Continue to next neighbor if <span class="math inline">\(g&#39;(s) \le g(s&#39;)\)</span>, since it is better. If not in <code>enqueued</code>, compute <span class="math inline">\(h(s&#39;)\)</span> by the heuristic function.</li><li>Update <span class="math inline">\(g(s&#39;)\)</span> and <span class="math inline">\(h(s&#39;)\)</span> in <code>enqueued</code> and push it to the queue.</li><li>If reach target node, continually find parent node by <code>explored</code> and return the path.</li></ol><p><code>lazy_astar.py</code>: lazy A* algorithm</p><ol type="1"><li>When expanding node, check its edge collision with parent.</li><li>When checking neighbors, do not need to compare <span class="math inline">\(g&#39;(s&#39;)\)</span> and <span class="math inline">\(g(s&#39;)\)</span></li><li>Multiple nodes with different parents can be added to the queue.</li></ol><p><code>runDubins.py</code>: similar to <code>run.py</code> but use Dubins environment</p><p><code>DubinsMapEnvironment.py</code>: inherited from <code>MapEnvironment</code></p><ol type="1"><li>Compute distances with Dubins path</li><li>Compute heuristic with Dubins path</li><li>Generate path by Dubins path planning</li></ol><p><code>DubinsSampler.py</code>:</p><ol type="1"><li>Sample <span class="math inline">\(N\)</span> vertices same as in <code>Sampler.py</code></li><li>Divide angles to <span class="math inline">\(M\)</span> parts, add angles to each vertices to create <span class="math inline">\(M\times N\)</span> samples</li></ol><p><code>Dubins.py</code>: utility function for Dubins path</p><p><code>ROSPlanner.py</code>: take goal from rviz and do planning. <mark>Be careful of the frame change between map and world</mark></p><ol type="1"><li>Load map info</li><li>Construct graph and save for later use</li><li>Subscribe to pose topic, save current pose</li><li>Subscribe to goal topic, plan from the current pose to the goal, publish the path using service defined in lab2</li><li>If there are multiple goals, sequentially planning through them and combine the path</li></ol><h1 id="reference">Reference</h1><ol type="1"><li><a href="http://ais.informatik.uni-freiburg.de/teaching/ss13/robotics/" target="_blank" rel="noopener">Introduction to Mobile Robotics</a></li><li><a href="https://courses.cs.washington.edu/courses/cse490r/19sp/" target="_blank" rel="noopener">Mobile Robots</a></li><li><a href="http://www.probabilistic-robotics.org/" target="_blank" rel="noopener">Probabilistic Robotics</a></li></ol>]]></content:encoded>
      
      <comments>https://thesong96.github.io/2020/03/21/MuSHR-Review/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Python Comments Style</title>
      <link>https://thesong96.github.io/2020/03/08/Python-Comments-Style/</link>
      <guid>https://thesong96.github.io/2020/03/08/Python-Comments-Style/</guid>
      <pubDate>Mon, 09 Mar 2020 05:21:41 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;google-style&quot;&gt;Google Style&lt;/h2&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="google-style">Google Style</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="string">"""Example Google style docstrings.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">This module demonstrates documentation as specified by the `Google Python</span></span><br><span class="line"><span class="string">Style Guide`_. Docstrings may extend over multiple lines. Sections are created</span></span><br><span class="line"><span class="string">with a section header and a colon followed by a block of indented text.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Example:</span></span><br><span class="line"><span class="string">    Examples can be given using either the ``Example`` or ``Examples``</span></span><br><span class="line"><span class="string">    sections. Sections support any reStructuredText formatting, including</span></span><br><span class="line"><span class="string">    literal blocks::</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        $ python example_google.py</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Section breaks are created by resuming unindented text. Section breaks</span></span><br><span class="line"><span class="string">are also implicitly created anytime a new section starts.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Attributes:</span></span><br><span class="line"><span class="string">    module_level_variable1 (int): Module level variables may be documented in</span></span><br><span class="line"><span class="string">        either the ``Attributes`` section of the module docstring, or in an</span></span><br><span class="line"><span class="string">        inline docstring immediately following the variable.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Either form is acceptable, but the two should not be mixed. Choose</span></span><br><span class="line"><span class="string">        one convention to document module level variables and be consistent</span></span><br><span class="line"><span class="string">        with it.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Todo:</span></span><br><span class="line"><span class="string">    * For module TODOs</span></span><br><span class="line"><span class="string">    * You have to also use ``sphinx.ext.todo`` extension</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">.. _Google Python Style Guide:</span></span><br><span class="line"><span class="string">   http://google.github.io/styleguide/pyguide.html</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line">module_level_variable1 = <span class="number">12345</span></span><br><span class="line"></span><br><span class="line">module_level_variable2 = <span class="number">98765</span></span><br><span class="line"><span class="string">"""int: Module level variable documented inline.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">The docstring may span multiple lines. The type may optionally be specified</span></span><br><span class="line"><span class="string">on the first line, separated by a colon.</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">function_with_types_in_docstring</span><span class="params">(param1, param2)</span>:</span></span><br><span class="line">    <span class="string">"""Example function with types documented in the docstring.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    `PEP 484`_ type annotations are supported. If attribute, parameter, and</span></span><br><span class="line"><span class="string">    return types are annotated according to `PEP 484`_, they do not need to be</span></span><br><span class="line"><span class="string">    included in the docstring:</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">        param1 (int): The first parameter.</span></span><br><span class="line"><span class="string">        param2 (str): The second parameter.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">        bool: The return value. True for success, False otherwise.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    .. _PEP 484:</span></span><br><span class="line"><span class="string">        https://www.python.org/dev/peps/pep-0484/</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">function_with_pep484_type_annotations</span><span class="params">(param1: int, param2: str)</span> -&gt; bool:</span></span><br><span class="line">    <span class="string">"""Example function with PEP 484 type annotations.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">        param1: The first parameter.</span></span><br><span class="line"><span class="string">        param2: The second parameter.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">        The return value. True for success, False otherwise.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">module_level_function</span><span class="params">(param1, param2=None, *args, **kwargs)</span>:</span></span><br><span class="line">    <span class="string">"""This is an example of a module level function.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Function parameters should be documented in the ``Args`` section. The name</span></span><br><span class="line"><span class="string">    of each parameter is required. The type and description of each parameter</span></span><br><span class="line"><span class="string">    is optional, but should be included if not obvious.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    If \*args or \*\*kwargs are accepted,</span></span><br><span class="line"><span class="string">    they should be listed as ``*args`` and ``**kwargs``.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    The format for a parameter is::</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">        name (type): description</span></span><br><span class="line"><span class="string">            The description may span multiple lines. Following</span></span><br><span class="line"><span class="string">            lines should be indented. The "(type)" is optional.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">            Multiple paragraphs are supported in parameter</span></span><br><span class="line"><span class="string">            descriptions.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">        param1 (int): The first parameter.</span></span><br><span class="line"><span class="string">        param2 (:obj:`str`, optional): The second parameter. Defaults to None.</span></span><br><span class="line"><span class="string">            Second line of description should be indented.</span></span><br><span class="line"><span class="string">        *args: Variable length argument list.</span></span><br><span class="line"><span class="string">        **kwargs: Arbitrary keyword arguments.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">        bool: True if successful, False otherwise.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">        The return type is optional and may be specified at the beginning of</span></span><br><span class="line"><span class="string">        the ``Returns`` section followed by a colon.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">        The ``Returns`` section may span multiple lines and paragraphs.</span></span><br><span class="line"><span class="string">        Following lines should be indented to match the first line.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">        The ``Returns`` section supports any reStructuredText formatting,</span></span><br><span class="line"><span class="string">        including literal blocks::</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">            &#123;</span></span><br><span class="line"><span class="string">                'param1': param1,</span></span><br><span class="line"><span class="string">                'param2': param2</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Raises:</span></span><br><span class="line"><span class="string">        AttributeError: The ``Raises`` section is a list of all exceptions</span></span><br><span class="line"><span class="string">            that are relevant to the interface.</span></span><br><span class="line"><span class="string">        ValueError: If `param2` is equal to `param1`.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">if</span> param1 == param2:</span><br><span class="line">        <span class="keyword">raise</span> ValueError(<span class="string">'param1 may not be equal to param2'</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">example_generator</span><span class="params">(n)</span>:</span></span><br><span class="line">    <span class="string">"""Generators have a ``Yields`` section instead of a ``Returns`` section.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">        n (int): The upper limit of the range to generate, from 0 to `n` - 1.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Yields:</span></span><br><span class="line"><span class="string">        int: The next number in the range of 0 to `n` - 1.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Examples:</span></span><br><span class="line"><span class="string">        Examples should be written in doctest format, and should illustrate how</span></span><br><span class="line"><span class="string">        to use the function.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">        &gt;&gt;&gt; print([i for i in example_generator(4)])</span></span><br><span class="line"><span class="string">        [0, 1, 2, 3]</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(n):</span><br><span class="line">        <span class="keyword">yield</span> i</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ExampleError</span><span class="params">(Exception)</span>:</span></span><br><span class="line">    <span class="string">"""Exceptions are documented in the same way as classes.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    The __init__ method may be documented in either the class level</span></span><br><span class="line"><span class="string">    docstring, or as a docstring on the __init__ method itself.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Either form is acceptable, but the two should not be mixed. Choose one</span></span><br><span class="line"><span class="string">    convention to document the __init__ method and be consistent with it.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Note:</span></span><br><span class="line"><span class="string">        Do not include the `self` parameter in the ``Args`` section.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">        msg (str): Human readable string describing the exception.</span></span><br><span class="line"><span class="string">        code (:obj:`int`, optional): Error code.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Attributes:</span></span><br><span class="line"><span class="string">        msg (str): Human readable string describing the exception.</span></span><br><span class="line"><span class="string">        code (int): Exception error code.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, msg, code)</span>:</span></span><br><span class="line">        self.msg = msg</span><br><span class="line">        self.code = code</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ExampleClass</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">"""The summary line for a class docstring should fit on one line.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    If the class has public attributes, they may be documented here</span></span><br><span class="line"><span class="string">    in an ``Attributes`` section and follow the same formatting as a</span></span><br><span class="line"><span class="string">    function's ``Args`` section. Alternatively, attributes may be documented</span></span><br><span class="line"><span class="string">    inline with the attribute's declaration (see __init__ method below).</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Properties created with the ``@property`` decorator should be documented</span></span><br><span class="line"><span class="string">    in the property's getter method.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Attributes:</span></span><br><span class="line"><span class="string">        attr1 (str): Description of `attr1`.</span></span><br><span class="line"><span class="string">        attr2 (:obj:`int`, optional): Description of `attr2`.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, param1, param2, param3)</span>:</span></span><br><span class="line">        <span class="string">"""Example of docstring on the __init__ method.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">        The __init__ method may be documented in either the class level</span></span><br><span class="line"><span class="string">        docstring, or as a docstring on the __init__ method itself.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">        Either form is acceptable, but the two should not be mixed. Choose one</span></span><br><span class="line"><span class="string">        convention to document the __init__ method and be consistent with it.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">        Note:</span></span><br><span class="line"><span class="string">            Do not include the `self` parameter in the ``Args`` section.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">        Args:</span></span><br><span class="line"><span class="string">            param1 (str): Description of `param1`.</span></span><br><span class="line"><span class="string">            param2 (:obj:`int`, optional): Description of `param2`. Multiple</span></span><br><span class="line"><span class="string">                lines are supported.</span></span><br><span class="line"><span class="string">            param3 (:obj:`list` of :obj:`str`): Description of `param3`.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        self.attr1 = param1</span><br><span class="line">        self.attr2 = param2</span><br><span class="line">        self.attr3 = param3  <span class="comment">#: Doc comment *inline* with attribute</span></span><br><span class="line">    </span><br><span class="line">        <span class="comment">#: list of str: Doc comment *before* attribute, with type specified</span></span><br><span class="line">        self.attr4 = [<span class="string">'attr4'</span>]</span><br><span class="line">    </span><br><span class="line">        self.attr5 = <span class="literal">None</span></span><br><span class="line">        <span class="string">"""str: Docstring *after* attribute, with type specified."""</span></span><br><span class="line">    </span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">readonly_property</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""str: Properties should be documented in their getter method."""</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">'readonly_property'</span></span><br><span class="line">    </span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">readwrite_property</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">""":obj:`list` of :obj:`str`: Properties with both a getter and setter</span></span><br><span class="line"><span class="string">        should only be documented in their getter method.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">        If the setter method contains notable behavior, it should be</span></span><br><span class="line"><span class="string">        mentioned here.</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="keyword">return</span> [<span class="string">'readwrite_property'</span>]</span><br><span class="line">    </span><br><span class="line"><span class="meta">    @readwrite_property.setter</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">readwrite_property</span><span class="params">(self, value)</span>:</span></span><br><span class="line">        value</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">example_method</span><span class="params">(self, param1, param2)</span>:</span></span><br><span class="line">        <span class="string">"""Class methods are similar to regular functions.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">        Note:</span></span><br><span class="line"><span class="string">            Do not include the `self` parameter in the ``Args`` section.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">        Args:</span></span><br><span class="line"><span class="string">            param1: The first parameter.</span></span><br><span class="line"><span class="string">            param2: The second parameter.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">        Returns:</span></span><br><span class="line"><span class="string">            True if successful, False otherwise.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__special__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""By default special members with docstrings are not included.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">        Special members are any methods or attributes that start with and</span></span><br><span class="line"><span class="string">        end with a double underscore. Any special member with a docstring</span></span><br><span class="line"><span class="string">        will be included in the output, if</span></span><br><span class="line"><span class="string">        ``napoleon_include_special_with_doc`` is set to True.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">        This behavior can be enabled by changing the following setting in</span></span><br><span class="line"><span class="string">        Sphinx's conf.py::</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">            napoleon_include_special_with_doc = True</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__special_without_docstring__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_private</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""By default private members are not included.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">        Private members are any methods or attributes that start with an</span></span><br><span class="line"><span class="string">        underscore and are *not* special. By default they are not included</span></span><br><span class="line"><span class="string">        in the output.</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">        This behavior can be changed such that private members *are* included</span></span><br><span class="line"><span class="string">        by changing the following setting in Sphinx's conf.py::</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">            napoleon_include_private_with_doc = True</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_private_without_docstring</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://thesong96.github.io/2020/03/08/Python-Comments-Style/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Review - Transfer depends on Acquisition: Analyzing Manipulation Strategies for Robotic Feeding</title>
      <link>https://thesong96.github.io/2020/02/28/Review-Transfer-depends-on-Acquisition-Analyzing-Manipulation-Strategies/</link>
      <guid>https://thesong96.github.io/2020/02/28/Review-Transfer-depends-on-Acquisition-Analyzing-Manipulation-Strategies/</guid>
      <pubDate>Fri, 28 Feb 2020 23:17:42 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;&lt;strong&gt;Goal&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;review SPNet
&lt;ul&gt;
&lt;li&gt;Dense Block需要搞明白.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;What is BLD ??????&lt;/li&gt;
&lt;li&gt;review datase
        
      
      </description>
      
      
      <content:encoded><![CDATA[<p><strong>Goal</strong>:</p><ul><li>review SPNet<ul><li>Dense Block需要搞明白.</li></ul></li><li>What is BLD ??????</li><li>review dataset</li></ul><hr /><h3 id="spnet">SPNet</h3><p>Skewering Position Network</p><figure><img src="https://i.imgur.com/4HVZJjk.png" alt="spnet" /><figcaption aria-hidden="true">spnet</figcaption></figure><ul><li>Dense Block? we have two version of SPNet (shallow/dense). A shallower version() has 3 and 6 inner layers in each dense block and a deeper version has 6 and 12 inner layers respectively.</li><li>We tested multiple versions of SPNet with varying dense block sizes and angle resolutions. All the network variants including the simple SPNet were trained with the dataset until the training loss stabilized, and for the binary masks, they reached a similar test accuracy of 96.5%. However, the <code>F1 score</code> of the dense block SPNet was 11.76% higher than the simple SPNet. The <code>recall</code> of the dense block SPNet was higher than that of the simple SPNet while their precisions were similar.<ul><li>what's the difference between simple and dense block SPNet?</li><li>recap criteria: F1 score, recall, true positive, false negative, etc</li></ul></li><li>Rotation Mask, according to the tutorial script, pred_rmasks.shape = (1, 289, 19) why 19?</li><li>The rotation mask consists of 17 × 17 × a grid cells, where a is the angle resolution represented by the number of classes for the discretized angles between [0, π).</li><li>why discretized angles to <code>#a</code> classes:<ul><li>the rotation classification was more reliable than rotation regression for our early test cases.</li><li>we can handle the rotation free annotation as a class among other specific rotations.<ul><li>(rotation free? means any rotation is ok for that food item, according to the note below)</li></ul></li><li>here, we set angle resolution to be 18, there are a total of 19 classes: class 0 represents any rotation while class 1 ∼ 18 denote specific angles, <span class="math inline">\((class id−1)×10°\)</span>. `````````````````</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torchvision.transforms <span class="keyword">as</span> transforms</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">from</span> bite_selection_package.model.spnet <span class="keyword">import</span> DenseSPNet</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">spnet_tutorial</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># initialize DenseSPNet and load the trained checkpoint</span></span><br><span class="line">    spnet = DenseSPNet()</span><br><span class="line">    checkpoint = torch.load(<span class="string">'../checkpoint/spnet_ckpt.pth'</span>)</span><br><span class="line">    spnet.load_state_dict(checkpoint[<span class="string">'net'</span>])</span><br><span class="line"></span><br><span class="line">    <span class="comment"># prepare an input image</span></span><br><span class="line">    img = Image.open(<span class="string">'./sample.jpg'</span>)</span><br><span class="line">    img = img.resize((<span class="number">136</span>, <span class="number">136</span>))</span><br><span class="line">    trans = transforms.ToTensor()</span><br><span class="line">    inp = torch.stack([trans(img)])</span><br><span class="line"></span><br><span class="line">    <span class="comment"># get predictions</span></span><br><span class="line">    spnet.eval()</span><br><span class="line">    pred_bmasks, pred_rmasks = spnet(inp)</span><br><span class="line"></span><br><span class="line">    print(pred_bmasks.shape, pred_rmasks.shape)</span><br><span class="line">    <span class="comment"># print and visualize predicted masks</span></span><br><span class="line">    print(<span class="string">'rotation mask: '</span>)</span><br><span class="line">    print(pred_rmasks.data)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">'visualize binary mask for skewering locations'</span>)</span><br><span class="line">    bm_arr = pred_bmasks.data[<span class="number">0</span>].sigmoid().view(<span class="number">17</span>, <span class="number">17</span>).numpy()</span><br><span class="line"></span><br><span class="line">    print(bm_arr.shape)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    spnet_tutorial()</span><br></pre></td></tr></table></figure><ul><li>why not <code>Mask-RCNN</code>: We developed SPNet running on top of RetinaNet instead of extending Mask RCNN because we do not need pixel-wise mask generation and masks over the entire input scene – SPNet runs only for the food item we want to acquire.</li><li>why dense block: we adopt the dense block structure from <code>DenseNet</code> in order to increase the representation power of the network.</li></ul><h3 id="dataset">DataSet</h3><figure><img src="https://i.imgur.com/J0KEEId.png" alt="SPNet prformance" /><figcaption aria-hidden="true">SPNet prformance</figcaption></figure><ul><li><p>small: Cantaloupes, bananas, and strawberries</p><p>long: carrots and celeries</p><p>round: eggs</p><p>We generated the masks with specific rules for each category for effective feeding, so that SPNet learns our category-dependent strategies (see Fig.4), like skewering long items at their ends with the tines perpendicular(fork tine?? 怎么个垂直，是fork的切面?) to the item’s long axis.</p></li></ul><h3 id="bite-acquisition-experiments">Bite Acquisition Experiments</h3><ul><li><p>Using each of these strategies, ourautonomous robotic system skewered 2 plates of 5 pieces of each of these 6 food items, thus totalling to 3 skewering position strategies × 2 plates × 5 pieces × 6 food items = 180 trials. <strong>Since both the baseline and SPNet methods are capable of letting the user select the food item to acquire, our system attempted skewering each item only once</strong>. This is in contrast to BLD, which doesn’t let the user choose and thus is free to retry food items. We restrict BLD to 30 attempts to match the number of trials used for the other methods</p></li><li><p><strong>check the experiment video to see how exactly we do it</strong>.</p><p>For two of the food items, bananas, and strawberries, we also compared two skewering approach angle strategies: <em>vertical and angled</em>. We had two discrete manipulation primitives for the angled primitive, one with horizontal tines and one with vertical. Bananas often slip off the fork, so we tilted the fork by 45 degrees to orient the tines more horizontally. When skewering strawberries, the tines tend to slip on the rounded surface without penetrating it. Therefore, we tilted the fork in the other direction to so that the tines skewered the strawberry vertically. Using SPNet, we skewered 2 plates of 5 items for bananas and strawberries, resulting in 20 additional trials which we compared with the vertical performance of the above experiment.<img src="https://i.imgur.com/zb9XuEk.jpg" alt="image-20200304155034047" /></p></li><li></li></ul><hr /><p><strong>憨憨学英语</strong>🌲</p><ul><li>Heterogeneous 异构的</li><li>slender 苗条的</li><li>yolk 蛋黄</li></ul>]]></content:encoded>
      
      <comments>https://thesong96.github.io/2020/02/28/Review-Transfer-depends-on-Acquisition-Analyzing-Manipulation-Strategies/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Camera Matrix</title>
      <link>https://thesong96.github.io/2020/02/27/Camera-Matrix/</link>
      <guid>https://thesong96.github.io/2020/02/27/Camera-Matrix/</guid>
      <pubDate>Fri, 28 Feb 2020 00:46:05 GMT</pubDate>
      <description>
      
        
        
          &lt;h3 id=&quot;frame-transformations-review-for-extrinsic-matrix&quot;&gt;Frame Transformations review (for Extrinsic matrix)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Extrinsic camer
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h3 id="frame-transformations-review-for-extrinsic-matrix">Frame Transformations review (for Extrinsic matrix)</h3><ul><li>Extrinsic camera matrix</li></ul><iframe src="https://drive.google.com/file/d/1_T0T3IL8m15mz5IoSMLmsSiPUD4qBPea/preview" width="640" height="480"></iframe><h3 id="pinhole-cameraintrinsic-matrix">Pinhole Camera(Intrinsic Matrix)</h3><figure><img src="https://i.imgur.com/ZSkkMxd.png" alt="Imgur" /><figcaption aria-hidden="true">Imgur</figcaption></figure><h3 id="merge-them">Merge them</h3><iframe src="https://drive.google.com/file/d/1Rs647iuzPi4yc0JSkKuWH0yvzcOvYjq8/preview" width="640" height="480"></iframe><p>有了上述的 投影公式 <span class="math inline">\(P = K[R|t]\)</span>, 既可以从3D到2D, 如果能有real sense这样带depth sensor的camera, 那就可以粗略估计Z(in camera frame), 就能反算world frame的坐标了</p><h3 id="questions">Questions:</h3><ul><li>有了camera的3d -&gt; 2d的投影关系原理清楚之后，常常听到人说要做camera calibration, 那这个calibration究竟在cali个什么、是intrinsic parameter还是extrinsic frame transform?</li><li>如上所述, 如果有depth image, 那可以3D坐标和2D坐标随意转换、但是pose呢? orientation呢? 但是好像理论上也可以? 比如被detect的物体上随意找3个点反算出来world frame的坐标, 那三个点不就确定了pose么? 但是实际可操作么? 滚回去看看代码.</li><li>Other One-Stage 3D Pose Estimation Methods:<ul><li><a href="https://github.com/NVlabs/Deep_Object_Pose" target="_blank" rel="noopener">NVLabs DOPE</a></li><li><a href="https://github.com/yuxng/PoseCNN" target="_blank" rel="noopener">PoseCNN</a></li><li><a href="https://arxiv.org/pdf/1611.10010.pdf" target="_blank" rel="noopener">Deep Cuboid Detection: Beyond 2D Bounding Boxes</a></li></ul></li></ul><h3 id="photography-basic">Photography Basic</h3><ul><li><a href="https://improvephotography.com/photography-basics/aperture-shutter-speed-and-iso/" target="_blank" rel="noopener">Photography Basics 101: Aperture, Shutter speed, and ISO</a></li></ul><hr /><h3 id="reference">Reference</h3><ul><li><a href="http://www.cs.cmu.edu/~16385/s17/Slides/11.1_Camera_matrix.pdf" target="_blank" rel="noopener">CMU 16385 Camera Matrix</a></li></ul><hr /><p>🌲憨憨学英语</p><ul><li>Camera obscura 暗箱</li></ul>]]></content:encoded>
      
      <comments>https://thesong96.github.io/2020/02/27/Camera-Matrix/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Git Q&amp;A Thread</title>
      <link>https://thesong96.github.io/2020/02/27/git-q-a-thread/</link>
      <guid>https://thesong96.github.io/2020/02/27/git-q-a-thread/</guid>
      <pubDate>Thu, 27 Feb 2020 20:37:54 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;case-git-push-不给其他args&quot;&gt;Case: git push 不给其他args&lt;/h2&gt;
&lt;p&gt;Discription: clone下来一个repo, 我新建一个branch叫做&lt;code&gt;my_branch&lt;/code&gt;然后push到remote
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="case-git-push-不给其他args">Case: git push 不给其他args</h2><p>Discription: clone下来一个repo, 我新建一个branch叫做<code>my_branch</code>然后push到remote/origin, 使用的命令是<code>git push</code>, 然后我在别的地儿再重新clone这个repo, <code>git checkout my_branch</code>的时候是到<code>origin/my_branch</code>, 而没有一个local的不带<code>origin/</code>开头的<code>my_branch</code> , 这是咋回事儿啊</p><ul><li>我猜测可能是因为, 没有用<code>git push -u origin my_branch</code>, 或者 <code>git push my_branch:my_branch</code>, &lt;此处前面表示local, 后面表示remote&gt;, 总之这俩条都表示要local的<code>my_branch</code> 去追踪<code>remote/origin</code>的<code>my_branch</code>)</li><li>test了一下 果然和我的猜测一样 整明白了.</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 小贴士:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## switch remote URLs back and forth between HTTPS and SSH</span></span><br><span class="line">$ git remote <span class="built_in">set</span>-url origin https://github.com/USERNAME/REPOSITORY.git</span><br><span class="line">$ git remote <span class="built_in">set</span>-url origin git@github.com:USERNAME/REPOSITORY.git</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 查看remote</span></span><br><span class="line">$ git remote -v</span><br><span class="line">&gt; origin  https://github.com/USERNAME/REPOSITORY.git (fetch)</span><br><span class="line">&gt; origin  https://github.com/USERNAME/REPOSITORY.git (push)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 查看git config</span></span><br><span class="line">git config --list</span><br><span class="line">git config --list --show-origin</span><br><span class="line"><span class="comment">## or look at your ~/.gitconfig file. The local configuration will be in your repository's .git/config file.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1. System level (applied to every user on the system and all their repositories)</span></span><br><span class="line">$ git config --list --system (may need sudo)</span><br><span class="line">$ git config --system color.ui <span class="literal">true</span></span><br><span class="line">$ git config --edit --system</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. Global level (values specific personally to you, the user).</span></span><br><span class="line">$ git config --list --global</span><br><span class="line">$ git config --global user.name xyz</span><br><span class="line">$ git config --edit --global</span><br><span class="line"></span><br><span class="line"><span class="comment">#3. Repository level (specific to that single repository)</span></span><br><span class="line">$ git config --list --<span class="built_in">local</span></span><br><span class="line">$ git config --<span class="built_in">local</span> core.ignorecase <span class="literal">true</span> (--<span class="built_in">local</span> optional)</span><br><span class="line">$ git config --edit --<span class="built_in">local</span> (--<span class="built_in">local</span> optional)</span><br><span class="line"></span><br><span class="line"><span class="comment"># How do I read one particular configuration?</span></span><br><span class="line">$ git config user.name </span><br><span class="line"><span class="comment"># You may also specify options --system, --global, --local to read that value at a particular level.</span></span><br></pre></td></tr></table></figure><h2 id="case-how-to-manage-multiple-github-accounts-on-a-single-machine-with-ssh-keys">Case: How to manage multiple GitHub accounts on a single machine with SSH keys</h2><p>为啥要搞这个?</p><ul><li>马上毕业了uw邮箱可能用不了了</li><li>以后肯定会遇到work account和personal account的conflicts(现在uw.edu就是work account)</li></ul><blockquote><p>The case solution is almost forwarded from this blog: <a href="https://www.freecodecamp.org/news/manage-multiple-github-accounts-the-ssh-way-2dadc30ccaca/" target="_blank" rel="noopener">step by step</a></p></blockquote><p>Discription: 有多个github/gitlab账号 并且每个账号都在本地有不同的repo要develop，希望push的时候能认清自己是谁.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">"nathan"</span></span><br><span class="line">$ git config --global user.email <span class="string">"example@gmail.com</span></span><br></pre></td></tr></table></figure><h3 id="generating-the-ssh-keys">1. Generating the SSH keys</h3><p>Before generating an SSH key, we can check to see if we have any existing SSH keys: <code>ls -al ~/.ssh</code> This will list out all existing public and private key pairs, if any.</p><p>If <code>~/.ssh/id_rsa</code> is available, we can reuse it, or else we can first generate a key to the default <code>~/.ssh/id_rsa</code> by running:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa</span><br></pre></td></tr></table></figure><p>When asked for the location to save the keys, accept the default location by pressing enter. A private key and public key <code>~/.ssh/id_rsa.pub</code> will be created at the default ssh location <code>~/.ssh/</code>.</p><p>Let’s use this default key pair for our personal account.</p><p>For the work accounts, we will create different SSH keys. The below code will generate the SSH keys, and saves the public key with the tag <em>“email@work_mail.com”</em> to <code>~/.ssh/id_rsa_work_user1.pub</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C <span class="string">"email@work_mail.com"</span> -f <span class="string">"id_rsa_work_user1"</span></span><br></pre></td></tr></table></figure><h3 id="adding-the-new-ssh-key-to-the-corresponding-github-account">2. Adding the new SSH key to the corresponding GitHub account</h3><p>We already have the SSH public keys ready, and we will ask our GitHub accounts to trust the keys we have created. This is to get rid of the need for typing in the username and password every time you make a Git push.</p><p>Copy the public key <code>pbcopy &lt; ~/.ssh/id_rsa.</code>pub and then log in to your personal GitHub account:</p><ol type="1"><li>Go to <code>Settings</code></li><li>Select <code>SSH and GPG keys</code> from the menu to the left.</li><li>Click on <code>New SSH key</code>, provide a suitable title, and paste the key in the box below</li><li>Click <code>Add key</code> — and you’re done!</li></ol><blockquote><p>For the work accounts, use the corresponding public keys (<code>pbcopy &lt; ~/.ssh/id_rsa_work_user1.</code>pub) and repeat the above steps in your GitHub work accounts.</p></blockquote><h3 id="registering-the-new-ssh-keys-with-the-ssh-agent">3 . Registering the new SSH Keys with the ssh-agent</h3><p>To use the keys, we have to register them with the <strong>ssh-agent</strong> on our machine. Ensure ssh-agent is running using the command <code>eval "$(ssh-agent -s)"</code>. Add the keys to the ssh-agent like so:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-add ~/.ssh/id_rsa</span><br><span class="line">$ ssh-add ~/.ssh/id_rsa_work_user1</span><br></pre></td></tr></table></figure><p>Make the ssh-agent use the respective SSH keys for the different SSH Hosts.</p><p>This is the crucial part, and we have two different approaches:</p><p>Using the SSH configuration file (Step 4), and having only one active SSH key in the ssh-agent at a time (Step 5).</p><h3 id="creating-the-ssh-config-file"><strong>4. Creating the SSH config File</strong></h3><p>Here we are actually adding the SSH configuration rules for different hosts, stating which identity file to use for which domain.</p><p>The SSH config file will be available at <strong>~/.ssh/config</strong>. Edit it if it exists, or else we can just create it.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ~/.ssh/</span><br><span class="line">$ touch config           // Creates the file <span class="keyword">if</span> not exists</span><br><span class="line">$ code config            // Opens the file <span class="keyword">in</span> VS code, use any editor</span><br></pre></td></tr></table></figure><p>Make configuration entries for the relevant GitHub accounts similar to the one below in your <code>~/.ssh/config</code> file:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Personal account, - the default config</span></span><br><span class="line">Host github.com</span><br><span class="line">   HostName github.com</span><br><span class="line">   User git</span><br><span class="line">   IdentityFile ~/.ssh/id_rsa</span><br><span class="line">   </span><br><span class="line"><span class="comment"># Work account-1</span></span><br><span class="line">Host github.com-work_user1    </span><br><span class="line">   HostName github.com</span><br><span class="line">   User git</span><br><span class="line">   IdentityFile ~/.ssh/id_rsa_work_user1</span><br></pre></td></tr></table></figure><p>“<strong>work_user1</strong>” is the GitHub user id for the work account.</p><p>“<strong>g*ithub.com-*work_user1</strong>” is a notation used to differentiate the multiple Git accounts. You can also use “<strong>work_user1.g*ithub.com”*</strong> notation as well. Make sure you’re consistent with what hostname notation you use. This is relevant when you clone a repository or when you set the remote origin for a local repository</p><p>The above configuration asks ssh-agent to:</p><ul><li>Use <strong>id_rsa</strong> as the key for any Git URL that uses <strong><span class="citation" data-cites="github.com">@github.com</span></strong></li><li>Use the <strong>id_rsa_work_user1</strong> key for any Git URL that uses <strong><span class="citation" data-cites="github.com-work_user1">@github.com-work_user1</span></strong></li></ul><h3 id="one-active-ssh-key-in-the-ssh-agent-at-a-time">5. One active SSH key in the ssh-agent at a time</h3><p>This approach doesn’t require the SSH config rules. Rather we manually ensure that the ssh-agent has only the relevant key attached at the time of any Git operation.</p><p><code>ssh-add -l</code> will list all the SSH keys attached to the ssh-agent. Remove all of them and add the one key you are about to use.</p><p>If it’s to a personal Git account that you are about to push:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-add -D            //removes all ssh entries from the ssh-agent</span><br><span class="line">$ ssh-add ~/.ssh/id_rsa                 // Adds the relevant ssh key</span><br></pre></td></tr></table></figure><p>The ssh-agent now has the key mapped with the personal GitHub account, and we can do a Git push to the personal repository.</p><p>To push to your work GitHub account-1, change the SSH key mapped with the ssh-agent by removing the existing key and adding the SSH key mapped with the GitHub work account.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-add -D</span><br><span class="line">$ ssh-add ~/.ssh/id_rsa_work_user1</span><br></pre></td></tr></table></figure><p>The ssh-agent at present has the key mapped with the work Github account, and you can do a Git push to the work repository. This requires a bit of manual effort, though.</p><h3 id="setting-the-git-remote-url-for-the-local-repositories">Setting the git remote Url for the local repositories</h3><p>Once we have local Git repositories cloned /created, ensure the Git config user name and email is exactly what you want. GitHub identifies the author of any commit from the email id attached with the commit description.</p><p>To list the config name and email in the local Git directory, do <code>*git config user.name*</code>and <code>*git config user.email*</code>. If it’s not found, update accordingly.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config user.name <span class="string">"User 1"</span>   // Updates git config user name</span><br><span class="line">$ git config user.email <span class="string">"user1@workMail.com"</span></span><br></pre></td></tr></table></figure><h3 id="while-cloning-repositories">6. While Cloning Repositories</h3><p>Note: step 7 will help, if we have the repository already available on local.</p><p>Now that the configurations are in place, we can go ahead and clone the corresponding repositories. On cloning, make a note that we use the host names that we used in the SSH config.</p><p>Repositories can be cloned using the clone command Git provides:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> git@github.com:personal_account_name/repo_name.git</span><br></pre></td></tr></table></figure><p>The work repository will require a change to be made with this command:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> git@github.com-work_user1:work_user1/repo_name.git</span><br></pre></td></tr></table></figure><p>This change is made depending on the host name defined in the SSH config. The string between @ and : should match what we have given in the SSH config file.</p><h3 id="for-locally-existing-repositories">7. For Locally Existing Repositories</h3><p><strong>If we have the repository already cloned:</strong></p><p>List the Git remote of the repository, <code>git remote -v</code></p><p>Check whether the URL matches our GitHub host to be used, or else update the remote origin URL.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote <span class="built_in">set</span>-url origin git@github.com-worker_user1:worker_user1/repo_name.git</span><br></pre></td></tr></table></figure><p>Ensure the string between @ and : matches the Host we have given in the SSH config.</p><p><strong>If you are creating a new repository on local:</strong></p><p>Initialize Git in the project folder <code>git init</code>.</p><h3 id="create-the-new-repository-in-the-github-account-and-then-add-it-as-the-git-remote-to-the-local-repository.">Create the new repository in the GitHub account and then add it as the Git remote to the local repository.</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote add origin git@github.com-work_user1:work_user1/repo_name.git</span><br></pre></td></tr></table></figure><p>Ensure the string between @ and : matches the Host we have given in the SSH config.</p><p>Push the initial commit to the GitHub repository:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git add .</span><br><span class="line">$ git commit -m <span class="string">"Initial commit"</span></span><br><span class="line">$ git push -u origin master</span><br></pre></td></tr></table></figure><p>We are done!</p><p>Adding or updating the Git remote of the local Git directory with the proper host will take care of selecting the correct SSH key to verify our identity with GitHub. With all the above in place, our <code>git operations</code> should work seamlessly.</p><ul><li>Reference<ul><li><a href="https://gist.github.com/yeungeek/596984fd9e53d6c36c0d" target="_blank" rel="noopener">multi git account</a></li><li><a href="https://www.freecodecamp.org/news/manage-multiple-github-accounts-the-ssh-way-2dadc30ccaca/" target="_blank" rel="noopener">step by step</a> this one works, how to set things in ~/.ssh/config</li></ul></li></ul><h3 id="tips">Tips:</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch -d <span class="string">"branch name"</span> 删除branch</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://thesong96.github.io/2020/02/27/git-q-a-thread/#disqus_thread</comments>
    </item>
    
    <item>
      <title>tmux review</title>
      <link>https://thesong96.github.io/2020/02/26/tmux-cheatsheet/</link>
      <guid>https://thesong96.github.io/2020/02/26/tmux-cheatsheet/</guid>
      <pubDate>Thu, 27 Feb 2020 01:56:37 GMT</pubDate>
      <description>
      
        
        
          &lt;h3 id=&quot;简易脚本&quot;&gt;简易脚本&lt;/h3&gt;
&lt;p&gt;你是我的眼&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span 
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h3 id="简易脚本">简易脚本</h3><p>你是我的眼</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## uncomment the follow 2 lines to get into your desired dir</span></span><br><span class="line"><span class="comment"># path=`rospack find pytorch_retinanet`</span></span><br><span class="line"><span class="comment"># cd $path</span></span><br><span class="line"><span class="comment"># pwd</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">tmux new -s retina -d <span class="comment"># 后台创建一个名称为init的会话</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## --------- 重命名init会话的第一个窗口名称为code --------- ##</span></span><br><span class="line">tmux rename-window -t <span class="string">"retina:0"</span> code</span><br><span class="line"></span><br><span class="line"><span class="comment"># 默认上下分屏</span></span><br><span class="line">tmux split-window -t <span class="string">"retina:code"</span></span><br><span class="line">tmux split-window -h -t <span class="string">"retina:code"</span></span><br><span class="line">tmux select-pane -U</span><br><span class="line">tmux split-window -h -t <span class="string">"retina:code"</span></span><br><span class="line"><span class="comment"># 切换到指定目录并运行python服务</span></span><br><span class="line">tmux send -t <span class="string">"retina:code"</span> <span class="string">"cd ~; echo Me is a genius"</span> Enter</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## ------------ 新建一个名称为data的窗口------------------- ##</span></span><br><span class="line">tmux neww -a -n data -t retina <span class="comment"># neww等同于new window</span></span><br><span class="line"><span class="comment"># 默认上下分屏</span></span><br><span class="line">tmux split-window -h -t <span class="string">"retina:data"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## ------------ 新建一个名称为tool的窗口------------------- ##</span></span><br><span class="line">tmux neww -a -n tool -t retina <span class="comment"># neww等同于new window</span></span><br><span class="line"><span class="comment"># 运行htop工具</span></span><br><span class="line">tmux send -t <span class="string">"retina:tool"</span> <span class="string">"htop"</span> Enter</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## ------------ 进入tmux ------------------- ##</span></span><br><span class="line">tmux attach -t retina</span><br></pre></td></tr></table></figure><h3 id="tmux.conf-我的配置文件">.tmux.conf 我的配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span>-option -g mouse on</span><br><span class="line"><span class="built_in">set</span>-window-option -g mode-keys vi</span><br><span class="line"><span class="comment">#set -g default-terminal "screen-256color"</span></span><br><span class="line"><span class="built_in">bind</span>-key -n <span class="string">"S-Left"</span> select-window -t :-</span><br><span class="line"><span class="built_in">bind</span>-key -n <span class="string">"S-Right"</span> select-window -t :+</span><br><span class="line"><span class="built_in">bind</span>-key -n <span class="string">"C-Left"</span> select-pane -L</span><br><span class="line"><span class="built_in">bind</span>-key -n <span class="string">"C-Right"</span> select-pane -R</span><br><span class="line"><span class="built_in">bind</span>-key -n <span class="string">"C-Up"</span> select-pane -U</span><br><span class="line"><span class="built_in">bind</span>-key -n <span class="string">"C-Down"</span> select-pane -D</span><br><span class="line"></span><br><span class="line">tmux_conf_copy_to_os_clipboard=<span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="new-session">new session</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tmux new -s init -d <span class="comment"># 后台创建一个名称为init的会话</span></span><br></pre></td></tr></table></figure><h3 id="接入分离会话">接入,分离会话</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 用tmux的控制模式</span></span><br><span class="line"><span class="comment"># Ctrl + b ; d</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在tmux任意一个窗口里面</span></span><br><span class="line">$ tmux detach</span><br><span class="line"></span><br><span class="line"><span class="comment"># 恢复tmux会话</span></span><br><span class="line">$ tmux attachs</span><br><span class="line">$ tmux attach -t 0 <span class="comment">#使用session number</span></span><br><span class="line">$ tmux attach -t init <span class="comment">#回复init会话</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看tmux会话</span></span><br><span class="line">$ tmux ls = tmux list-session</span><br><span class="line"></span><br><span class="line"><span class="comment"># Ctrl+b d：分离当前会话</span></span><br><span class="line"><span class="comment"># Ctrl+b s：列出所有会话</span></span><br><span class="line"><span class="comment"># Ctrl+b $：重命名当前会话</span></span><br></pre></td></tr></table></figure><h3 id="杀死会话">杀死会话</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用会话编号</span></span><br><span class="line">$ tmux <span class="built_in">kill</span>-session -t 0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用会话名称</span></span><br><span class="line">$ tmux <span class="built_in">kill</span>-session -t &lt;session-name&gt;</span><br></pre></td></tr></table></figure><h3 id="重命名会话">重命名会话</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tmux rename-session -t 0 &lt;new-name&gt;</span><br></pre></td></tr></table></figure><h3 id="划分窗格">划分窗格</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 划分上下两个窗格</span></span><br><span class="line">$ tmux split-window</span><br><span class="line"></span><br><span class="line"><span class="comment"># 划分左右两个窗格</span></span><br><span class="line">$ tmux split-window -h</span><br></pre></td></tr></table></figure><h3 id="移动光标">移动光标</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 光标切换到上方窗格</span></span><br><span class="line">$ tmux select-pane -U</span><br><span class="line"></span><br><span class="line"><span class="comment"># 光标切换到下方窗格</span></span><br><span class="line">$ tmux select-pane -D</span><br><span class="line"></span><br><span class="line"><span class="comment"># 光标切换到左边窗格</span></span><br><span class="line">$ tmux select-pane -L</span><br><span class="line"></span><br><span class="line"><span class="comment"># 光标切换到右边窗格</span></span><br><span class="line">$ tmux select-pane -R</span><br></pre></td></tr></table></figure><h3 id="交换窗格位置">交换窗格位置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 当前窗格上移</span></span><br><span class="line">$ tmux swap-pane -U</span><br><span class="line"></span><br><span class="line"><span class="comment"># 当前窗格下移</span></span><br><span class="line">$ tmux swap-pane -D</span><br></pre></td></tr></table></figure><h3 id="窗格快捷键">窗格快捷键</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Ctrl+b %：划分左右两个窗格。</span><br><span class="line">Ctrl+b &quot;：划分上下两个窗格。</span><br><span class="line">Ctrl+b &lt;arrow key&gt;：光标切换到其他窗格。&lt;arrow key&gt;是指向要切换到的窗格的方向键，比如切换到下方窗格，就按方向键↓。</span><br><span class="line">Ctrl+b ;：光标切换到上一个窗格。</span><br><span class="line">Ctrl+b o：光标切换到下一个窗格。</span><br><span class="line">Ctrl+b &#123;：当前窗格左移。</span><br><span class="line">Ctrl+b &#125;：当前窗格右移。</span><br><span class="line">Ctrl+b Ctrl+o：当前窗格上移。</span><br><span class="line">Ctrl+b Alt+o：当前窗格下移。</span><br><span class="line">Ctrl+b x：关闭当前窗格。</span><br><span class="line">Ctrl+b !：将当前窗格拆分为一个独立窗口。</span><br><span class="line">Ctrl+b z：当前窗格全屏显示，再使用一次会变回原来大小。</span><br><span class="line">Ctrl+b Ctrl+&lt;arrow key&gt;：按箭头方向调整窗格大小。</span><br><span class="line">Ctrl+b q：显示窗格编号。</span><br></pre></td></tr></table></figure><h3 id="其他命令">其他命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 列出所有快捷键，及其对应的 Tmux 命令</span></span><br><span class="line">$ tmux list-keys</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出所有 Tmux 命令及其参数</span></span><br><span class="line">$ tmux list-commands</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出当前所有 Tmux 会话的信息</span></span><br><span class="line">$ tmux info</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新加载当前的 Tmux 配置</span></span><br><span class="line">$ tmux <span class="built_in">source</span>-file ~/.tmux.conf</span><br></pre></td></tr></table></figure><hr /><h3 id="reference">Reference</h3><ul><li><p><a href="https://www.ruanyifeng.com/blog/2019/10/tmux.html" target="_blank" rel="noopener">Tmux使用教程</a></p></li><li><p><a href="%5Bhttp://louiszhai.github.io/2017/09/30/tmux/#%E8%84%9A%E6%9C%AC%E5%8C%96%E7%9A%84Tmux%5D(http://louiszhai.github.io/2017/09/30/tmux/#脚本化的Tmux)">脚本化的Tmux</a></p></li></ul>]]></content:encoded>
      
      <comments>https://thesong96.github.io/2020/02/26/tmux-cheatsheet/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Linux Common Tool CheatSheet</title>
      <link>https://thesong96.github.io/2020/02/25/Linux-Common-Tool-CheatSheet/</link>
      <guid>https://thesong96.github.io/2020/02/25/Linux-Common-Tool-CheatSheet/</guid>
      <pubDate>Tue, 25 Feb 2020 20:35:11 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;ssh&quot;&gt;ssh&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;kill process that are using port:80&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;
        
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="ssh">ssh</h2><ul><li>kill process that are using port:80</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo fuser -k 80/tcp</span><br></pre></td></tr></table></figure><ul><li>auto ssh</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-copy-id id@server</span><br><span class="line"><span class="comment">## weebo</span></span><br><span class="line">$ ssh-copy-id nansong@10.158.53.11</span><br></pre></td></tr></table></figure><ul><li>sky</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh root@23.94.185.28</span><br></pre></td></tr></table></figure><ul><li>du cmd: 查看文件夹大</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ du -h <span class="comment"># 查看当文件夹及其子文件夹大小</span></span><br><span class="line">$ du -h --max-depth=1 <span class="comment"># depth=1 文件夹大小</span></span><br></pre></td></tr></table></figure><h2 id="find">find</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">$ find ./<span class="built_in">test</span> -name <span class="string">"*.php"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Ignore the case</span></span><br><span class="line">$ find ./<span class="built_in">test</span> -iname <span class="string">"*.Php"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Limit depth of directory traversal</span></span><br><span class="line">$ find ./<span class="built_in">test</span> -maxdepth 2 -name <span class="string">"*.php"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Invert match</span></span><br><span class="line">$ find ./<span class="built_in">test</span> -not -name <span class="string">"*.php"</span></span><br><span class="line">$ find ./<span class="built_in">test</span> ! -name <span class="string">"*.php"</span></span><br><span class="line">./<span class="built_in">test</span></span><br><span class="line">./<span class="built_in">test</span>/abc.txt</span><br><span class="line">./<span class="built_in">test</span>/subdir</span><br><span class="line"></span><br><span class="line"><span class="comment"># Combine multiple search criterias</span></span><br><span class="line">$ find ./<span class="built_in">test</span> -name <span class="string">'abc*'</span> ! -name <span class="string">'*.php'</span></span><br><span class="line">./<span class="built_in">test</span>/abc.txt</span><br><span class="line">./<span class="built_in">test</span>/abc</span><br><span class="line"></span><br><span class="line"><span class="comment"># OR operator</span></span><br><span class="line">$ find -name <span class="string">'*.php'</span> -o -name <span class="string">'*.txt'</span></span><br><span class="line">./abc.txt</span><br><span class="line">./subdir/how.php</span><br><span class="line">./abc.php</span><br><span class="line">./cool.php</span><br><span class="line"></span><br><span class="line"><span class="comment"># Only files</span></span><br><span class="line">$ find ./<span class="built_in">test</span> -<span class="built_in">type</span> f -name <span class="string">"abc*"</span></span><br><span class="line">./<span class="built_in">test</span>/abc.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># Only directories</span></span><br><span class="line">$ find ./<span class="built_in">test</span> -<span class="built_in">type</span> d -name <span class="string">"abc*"</span></span><br><span class="line">./<span class="built_in">test</span>/abc</span><br><span class="line"></span><br><span class="line"><span class="comment"># Search multiple directories together</span></span><br><span class="line">$ find ./<span class="built_in">test</span> ./dir2 -<span class="built_in">type</span> f -name <span class="string">"abc*"</span></span><br><span class="line">./<span class="built_in">test</span>/abc.txt</span><br><span class="line">./dir2/abcdefg.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># Find hidden files</span></span><br><span class="line">$ find ~ -<span class="built_in">type</span> f -name <span class="string">".*"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Find executable files</span></span><br><span class="line">$ find /bin -maxdepth 2 -perm /a=x</span><br><span class="line">/bin</span><br><span class="line">/bin/preseed_command</span><br><span class="line">/bin/mount</span><br><span class="line">/bin/zfgrep</span><br><span class="line">/bin/tempfile</span><br><span class="line">... output truncated ...</span><br></pre></td></tr></table></figure><p><strong>Reference</strong></p><ul><li><a href="https://www.binarytides.com/linux-find-command-examples/" target="_blank" rel="noopener">25 simple examples of Linux find command</a></li><li></li></ul>]]></content:encoded>
      
      <comments>https://thesong96.github.io/2020/02/25/Linux-Common-Tool-CheatSheet/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
